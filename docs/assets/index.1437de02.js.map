{"version":3,"file":"index.1437de02.js","sources":["../../node_modules/@tonaljs/core/dist/index.mjs","../../node_modules/@tonaljs/abc-notation/dist/index.mjs","../../node_modules/@tonaljs/array/dist/index.mjs","../../node_modules/@tonaljs/collection/dist/index.mjs","../../node_modules/@tonaljs/pcset/dist/index.mjs","../../node_modules/@tonaljs/chord-type/dist/index.mjs","../../node_modules/@tonaljs/chord-detect/dist/index.mjs","../../node_modules/@tonaljs/scale-type/dist/index.mjs","../../node_modules/@tonaljs/chord/dist/index.mjs","../../node_modules/@tonaljs/duration-value/dist/index.mjs","../../node_modules/@tonaljs/interval/dist/index.mjs","../../node_modules/@tonaljs/midi/dist/index.mjs","../../node_modules/@tonaljs/note/dist/index.mjs","../../node_modules/@tonaljs/roman-numeral/dist/index.mjs","../../node_modules/@tonaljs/key/dist/index.mjs","../../node_modules/@tonaljs/mode/dist/index.mjs","../../node_modules/@tonaljs/progression/dist/index.mjs","../../node_modules/@tonaljs/range/dist/index.mjs","../../node_modules/@tonaljs/scale/dist/index.mjs","../../node_modules/@tonaljs/time-signature/dist/index.mjs","../../node_modules/@tonaljs/tonal/dist/index.mjs","../../packages/tonal/tonal.mjs","../../node_modules/chord-voicings/dist/getBestVoicing.js","../../node_modules/chord-voicings/dist/tokenizeChord.js","../../node_modules/chord-voicings/dist/voicingsInRange.js","../../node_modules/chord-voicings/dist/dictionaryVoicing.js","../../node_modules/chord-voicings/dist/minTopNoteDiff.js","../../node_modules/chord-voicings/dist/index.js","../../packages/tonal/voicings.mjs"],"sourcesContent":["// src/utils.ts\nvar fillStr = (s, n) => Array(Math.abs(n) + 1).join(s);\nfunction deprecate(original, alternative, fn) {\n  return function(...args) {\n    console.warn(`${original} is deprecated. Use ${alternative}.`);\n    return fn.apply(this, args);\n  };\n}\n\n// src/named.ts\nfunction isNamed(src) {\n  return src !== null && typeof src === \"object\" && typeof src.name === \"string\" ? true : false;\n}\n\n// src/pitch.ts\nfunction isPitch(pitch) {\n  return pitch !== null && typeof pitch === \"object\" && typeof pitch.step === \"number\" && typeof pitch.alt === \"number\" ? true : false;\n}\nvar FIFTHS = [0, 2, 4, -1, 1, 3, 5];\nvar STEPS_TO_OCTS = FIFTHS.map(\n  (fifths) => Math.floor(fifths * 7 / 12)\n);\nfunction encode(pitch) {\n  const { step, alt, oct, dir = 1 } = pitch;\n  const f = FIFTHS[step] + 7 * alt;\n  if (oct === void 0) {\n    return [dir * f];\n  }\n  const o = oct - STEPS_TO_OCTS[step] - 4 * alt;\n  return [dir * f, dir * o];\n}\nvar FIFTHS_TO_STEPS = [3, 0, 4, 1, 5, 2, 6];\nfunction decode(coord) {\n  const [f, o, dir] = coord;\n  const step = FIFTHS_TO_STEPS[unaltered(f)];\n  const alt = Math.floor((f + 1) / 7);\n  if (o === void 0) {\n    return { step, alt, dir };\n  }\n  const oct = o + 4 * alt + STEPS_TO_OCTS[step];\n  return { step, alt, oct, dir };\n}\nfunction unaltered(f) {\n  const i = (f + 1) % 7;\n  return i < 0 ? 7 + i : i;\n}\n\n// src/note.ts\nvar NoNote = { empty: true, name: \"\", pc: \"\", acc: \"\" };\nvar cache = /* @__PURE__ */ new Map();\nvar stepToLetter = (step) => \"CDEFGAB\".charAt(step);\nvar altToAcc = (alt) => alt < 0 ? fillStr(\"b\", -alt) : fillStr(\"#\", alt);\nvar accToAlt = (acc) => acc[0] === \"b\" ? -acc.length : acc.length;\nfunction note(src) {\n  const stringSrc = JSON.stringify(src);\n  const cached = cache.get(stringSrc);\n  if (cached) {\n    return cached;\n  }\n  const value = typeof src === \"string\" ? parse(src) : isPitch(src) ? note(pitchName(src)) : isNamed(src) ? note(src.name) : NoNote;\n  cache.set(stringSrc, value);\n  return value;\n}\nvar REGEX = /^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)$/;\nfunction tokenizeNote(str) {\n  const m = REGEX.exec(str);\n  return [m[1].toUpperCase(), m[2].replace(/x/g, \"##\"), m[3], m[4]];\n}\nfunction coordToNote(noteCoord) {\n  return note(decode(noteCoord));\n}\nvar mod = (n, m) => (n % m + m) % m;\nvar SEMI = [0, 2, 4, 5, 7, 9, 11];\nfunction parse(noteName) {\n  const tokens = tokenizeNote(noteName);\n  if (tokens[0] === \"\" || tokens[3] !== \"\") {\n    return NoNote;\n  }\n  const letter = tokens[0];\n  const acc = tokens[1];\n  const octStr = tokens[2];\n  const step = (letter.charCodeAt(0) + 3) % 7;\n  const alt = accToAlt(acc);\n  const oct = octStr.length ? +octStr : void 0;\n  const coord = encode({ step, alt, oct });\n  const name = letter + acc + octStr;\n  const pc = letter + acc;\n  const chroma = (SEMI[step] + alt + 120) % 12;\n  const height = oct === void 0 ? mod(SEMI[step] + alt, 12) - 12 * 99 : SEMI[step] + alt + 12 * (oct + 1);\n  const midi = height >= 0 && height <= 127 ? height : null;\n  const freq = oct === void 0 ? null : Math.pow(2, (height - 69) / 12) * 440;\n  return {\n    empty: false,\n    acc,\n    alt,\n    chroma,\n    coord,\n    freq,\n    height,\n    letter,\n    midi,\n    name,\n    oct,\n    pc,\n    step\n  };\n}\nfunction pitchName(props) {\n  const { step, alt, oct } = props;\n  const letter = stepToLetter(step);\n  if (!letter) {\n    return \"\";\n  }\n  const pc = letter + altToAcc(alt);\n  return oct || oct === 0 ? pc + oct : pc;\n}\n\n// src/interval.ts\nvar NoInterval = { empty: true, name: \"\", acc: \"\" };\nvar INTERVAL_TONAL_REGEX = \"([-+]?\\\\d+)(d{1,4}|m|M|P|A{1,4})\";\nvar INTERVAL_SHORTHAND_REGEX = \"(AA|A|P|M|m|d|dd)([-+]?\\\\d+)\";\nvar REGEX2 = new RegExp(\n  \"^\" + INTERVAL_TONAL_REGEX + \"|\" + INTERVAL_SHORTHAND_REGEX + \"$\"\n);\nfunction tokenizeInterval(str) {\n  const m = REGEX2.exec(`${str}`);\n  if (m === null) {\n    return [\"\", \"\"];\n  }\n  return m[1] ? [m[1], m[2]] : [m[4], m[3]];\n}\nvar cache2 = {};\nfunction interval(src) {\n  return typeof src === \"string\" ? cache2[src] || (cache2[src] = parse2(src)) : isPitch(src) ? interval(pitchName2(src)) : isNamed(src) ? interval(src.name) : NoInterval;\n}\nvar SIZES = [0, 2, 4, 5, 7, 9, 11];\nvar TYPES = \"PMMPPMM\";\nfunction parse2(str) {\n  const tokens = tokenizeInterval(str);\n  if (tokens[0] === \"\") {\n    return NoInterval;\n  }\n  const num = +tokens[0];\n  const q = tokens[1];\n  const step = (Math.abs(num) - 1) % 7;\n  const t = TYPES[step];\n  if (t === \"M\" && q === \"P\") {\n    return NoInterval;\n  }\n  const type = t === \"M\" ? \"majorable\" : \"perfectable\";\n  const name = \"\" + num + q;\n  const dir = num < 0 ? -1 : 1;\n  const simple = num === 8 || num === -8 ? num : dir * (step + 1);\n  const alt = qToAlt(type, q);\n  const oct = Math.floor((Math.abs(num) - 1) / 7);\n  const semitones = dir * (SIZES[step] + alt + 12 * oct);\n  const chroma = (dir * (SIZES[step] + alt) % 12 + 12) % 12;\n  const coord = encode({ step, alt, oct, dir });\n  return {\n    empty: false,\n    name,\n    num,\n    q,\n    step,\n    alt,\n    dir,\n    type,\n    simple,\n    semitones,\n    chroma,\n    coord,\n    oct\n  };\n}\nfunction coordToInterval(coord, forceDescending) {\n  const [f, o = 0] = coord;\n  const isDescending = f * 7 + o * 12 < 0;\n  const ivl = forceDescending || isDescending ? [-f, -o, -1] : [f, o, 1];\n  return interval(decode(ivl));\n}\nfunction qToAlt(type, q) {\n  return q === \"M\" && type === \"majorable\" || q === \"P\" && type === \"perfectable\" ? 0 : q === \"m\" && type === \"majorable\" ? -1 : /^A+$/.test(q) ? q.length : /^d+$/.test(q) ? -1 * (type === \"perfectable\" ? q.length : q.length + 1) : 0;\n}\nfunction pitchName2(props) {\n  const { step, alt, oct = 0, dir } = props;\n  if (!dir) {\n    return \"\";\n  }\n  const calcNum = step + 1 + 7 * oct;\n  const num = calcNum === 0 ? step + 1 : calcNum;\n  const d = dir < 0 ? \"-\" : \"\";\n  const type = TYPES[step] === \"M\" ? \"majorable\" : \"perfectable\";\n  const name = d + num + altToQ(type, alt);\n  return name;\n}\nfunction altToQ(type, alt) {\n  if (alt === 0) {\n    return type === \"majorable\" ? \"M\" : \"P\";\n  } else if (alt === -1 && type === \"majorable\") {\n    return \"m\";\n  } else if (alt > 0) {\n    return fillStr(\"A\", alt);\n  } else {\n    return fillStr(\"d\", type === \"perfectable\" ? alt : alt + 1);\n  }\n}\n\n// src/distance.ts\nfunction transpose(noteName, intervalName) {\n  const note2 = note(noteName);\n  const interval2 = interval(intervalName);\n  if (note2.empty || interval2.empty) {\n    return \"\";\n  }\n  const noteCoord = note2.coord;\n  const intervalCoord = interval2.coord;\n  const tr = noteCoord.length === 1 ? [noteCoord[0] + intervalCoord[0]] : [noteCoord[0] + intervalCoord[0], noteCoord[1] + intervalCoord[1]];\n  return coordToNote(tr).name;\n}\nfunction distance(fromNote, toNote) {\n  const from = note(fromNote);\n  const to = note(toNote);\n  if (from.empty || to.empty) {\n    return \"\";\n  }\n  const fcoord = from.coord;\n  const tcoord = to.coord;\n  const fifths = tcoord[0] - fcoord[0];\n  const octs = fcoord.length === 2 && tcoord.length === 2 ? tcoord[1] - fcoord[1] : -Math.floor(fifths * 7 / 12);\n  const forceDescending = to.height === from.height && to.midi !== null && from.midi !== null && from.step > to.step;\n  return coordToInterval([fifths, octs], forceDescending).name;\n}\nexport {\n  accToAlt,\n  altToAcc,\n  coordToInterval,\n  coordToNote,\n  decode,\n  deprecate,\n  distance,\n  encode,\n  fillStr,\n  interval,\n  isNamed,\n  isPitch,\n  note,\n  stepToLetter,\n  tokenizeInterval,\n  tokenizeNote,\n  transpose\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { distance as dist, note, transpose as tr } from \"@tonaljs/core\";\nvar fillStr = (character, times) => Array(times + 1).join(character);\nvar REGEX = /^(_{1,}|=|\\^{1,}|)([abcdefgABCDEFG])([,']*)$/;\nfunction tokenize(str) {\n  const m = REGEX.exec(str);\n  if (!m) {\n    return [\"\", \"\", \"\"];\n  }\n  return [m[1], m[2], m[3]];\n}\nfunction abcToScientificNotation(str) {\n  const [acc, letter, oct] = tokenize(str);\n  if (letter === \"\") {\n    return \"\";\n  }\n  let o = 4;\n  for (let i = 0; i < oct.length; i++) {\n    o += oct.charAt(i) === \",\" ? -1 : 1;\n  }\n  const a = acc[0] === \"_\" ? acc.replace(/_/g, \"b\") : acc[0] === \"^\" ? acc.replace(/\\^/g, \"#\") : \"\";\n  return letter.charCodeAt(0) > 96 ? letter.toUpperCase() + a + (o + 1) : letter + a + o;\n}\nfunction scientificToAbcNotation(str) {\n  const n = note(str);\n  if (n.empty || !n.oct && n.oct !== 0) {\n    return \"\";\n  }\n  const { letter, acc, oct } = n;\n  const a = acc[0] === \"b\" ? acc.replace(/b/g, \"_\") : acc.replace(/#/g, \"^\");\n  const l = oct > 4 ? letter.toLowerCase() : letter;\n  const o = oct === 5 ? \"\" : oct > 4 ? fillStr(\"'\", oct - 5) : fillStr(\",\", 4 - oct);\n  return a + l + o;\n}\nfunction transpose(note2, interval) {\n  return scientificToAbcNotation(tr(abcToScientificNotation(note2), interval));\n}\nfunction distance(from, to) {\n  return dist(abcToScientificNotation(from), abcToScientificNotation(to));\n}\nvar abc_notation_default = {\n  abcToScientificNotation,\n  scientificToAbcNotation,\n  tokenize,\n  transpose,\n  distance\n};\nexport {\n  abcToScientificNotation,\n  abc_notation_default as default,\n  distance,\n  scientificToAbcNotation,\n  tokenize,\n  transpose\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { note } from \"@tonaljs/core\";\nvar isArray = Array.isArray;\nfunction ascR(b, n) {\n  const a = [];\n  for (; n--; a[n] = n + b)\n    ;\n  return a;\n}\nfunction descR(b, n) {\n  const a = [];\n  for (; n--; a[n] = b - n)\n    ;\n  return a;\n}\nfunction range(from, to) {\n  return from < to ? ascR(from, to - from + 1) : descR(from, from - to + 1);\n}\nfunction rotate(times, arr) {\n  const len = arr.length;\n  const n = (times % len + len) % len;\n  return arr.slice(n, len).concat(arr.slice(0, n));\n}\nfunction compact(arr) {\n  return arr.filter((n) => n === 0 || n);\n}\nfunction sortedNoteNames(notes) {\n  const valid = notes.map((n) => note(n)).filter((n) => !n.empty);\n  return valid.sort((a, b) => a.height - b.height).map((n) => n.name);\n}\nfunction sortedUniqNoteNames(arr) {\n  return sortedNoteNames(arr).filter((n, i, a) => i === 0 || n !== a[i - 1]);\n}\nfunction shuffle(arr, rnd = Math.random) {\n  let i;\n  let t;\n  let m = arr.length;\n  while (m) {\n    i = Math.floor(rnd() * m--);\n    t = arr[m];\n    arr[m] = arr[i];\n    arr[i] = t;\n  }\n  return arr;\n}\nfunction permutations(arr) {\n  if (arr.length === 0) {\n    return [[]];\n  }\n  return permutations(arr.slice(1)).reduce((acc, perm) => {\n    return acc.concat(\n      arr.map((e, pos) => {\n        const newPerm = perm.slice();\n        newPerm.splice(pos, 0, arr[0]);\n        return newPerm;\n      })\n    );\n  }, []);\n}\nexport {\n  compact,\n  permutations,\n  range,\n  rotate,\n  shuffle,\n  sortedNoteNames,\n  sortedUniqNoteNames\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nfunction ascR(b, n) {\n  const a = [];\n  for (; n--; a[n] = n + b)\n    ;\n  return a;\n}\nfunction descR(b, n) {\n  const a = [];\n  for (; n--; a[n] = b - n)\n    ;\n  return a;\n}\nfunction range(from, to) {\n  return from < to ? ascR(from, to - from + 1) : descR(from, from - to + 1);\n}\nfunction rotate(times, arr) {\n  const len = arr.length;\n  const n = (times % len + len) % len;\n  return arr.slice(n, len).concat(arr.slice(0, n));\n}\nfunction compact(arr) {\n  return arr.filter((n) => n === 0 || n);\n}\nfunction shuffle(arr, rnd = Math.random) {\n  let i;\n  let t;\n  let m = arr.length;\n  while (m) {\n    i = Math.floor(rnd() * m--);\n    t = arr[m];\n    arr[m] = arr[i];\n    arr[i] = t;\n  }\n  return arr;\n}\nfunction permutations(arr) {\n  if (arr.length === 0) {\n    return [[]];\n  }\n  return permutations(arr.slice(1)).reduce((acc, perm) => {\n    return acc.concat(\n      arr.map((e, pos) => {\n        const newPerm = perm.slice();\n        newPerm.splice(pos, 0, arr[0]);\n        return newPerm;\n      })\n    );\n  }, []);\n}\nvar collection_default = {\n  compact,\n  permutations,\n  range,\n  rotate,\n  shuffle\n};\nexport {\n  compact,\n  collection_default as default,\n  permutations,\n  range,\n  rotate,\n  shuffle\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { compact, range, rotate } from \"@tonaljs/collection\";\nimport {\n  deprecate,\n  interval,\n  note\n} from \"@tonaljs/core\";\nvar EmptyPcset = {\n  empty: true,\n  name: \"\",\n  setNum: 0,\n  chroma: \"000000000000\",\n  normalized: \"000000000000\",\n  intervals: []\n};\nvar setNumToChroma = (num2) => Number(num2).toString(2);\nvar chromaToNumber = (chroma2) => parseInt(chroma2, 2);\nvar REGEX = /^[01]{12}$/;\nfunction isChroma(set) {\n  return REGEX.test(set);\n}\nvar isPcsetNum = (set) => typeof set === \"number\" && set >= 0 && set <= 4095;\nvar isPcset = (set) => set && isChroma(set.chroma);\nvar cache = { [EmptyPcset.chroma]: EmptyPcset };\nfunction get(src) {\n  const chroma2 = isChroma(src) ? src : isPcsetNum(src) ? setNumToChroma(src) : Array.isArray(src) ? listToChroma(src) : isPcset(src) ? src.chroma : EmptyPcset.chroma;\n  return cache[chroma2] = cache[chroma2] || chromaToPcset(chroma2);\n}\nvar pcset = deprecate(\"Pcset.pcset\", \"Pcset.get\", get);\nvar chroma = (set) => get(set).chroma;\nvar intervals = (set) => get(set).intervals;\nvar num = (set) => get(set).setNum;\nvar IVLS = [\n  \"1P\",\n  \"2m\",\n  \"2M\",\n  \"3m\",\n  \"3M\",\n  \"4P\",\n  \"5d\",\n  \"5P\",\n  \"6m\",\n  \"6M\",\n  \"7m\",\n  \"7M\"\n];\nfunction chromaToIntervals(chroma2) {\n  const intervals2 = [];\n  for (let i = 0; i < 12; i++) {\n    if (chroma2.charAt(i) === \"1\")\n      intervals2.push(IVLS[i]);\n  }\n  return intervals2;\n}\nfunction chromas() {\n  return range(2048, 4095).map(setNumToChroma);\n}\nfunction modes(set, normalize = true) {\n  const pcs = get(set);\n  const binary = pcs.chroma.split(\"\");\n  return compact(\n    binary.map((_, i) => {\n      const r = rotate(i, binary);\n      return normalize && r[0] === \"0\" ? null : r.join(\"\");\n    })\n  );\n}\nfunction isEqual(s1, s2) {\n  return get(s1).setNum === get(s2).setNum;\n}\nfunction isSubsetOf(set) {\n  const s = get(set).setNum;\n  return (notes) => {\n    const o = get(notes).setNum;\n    return s && s !== o && (o & s) === o;\n  };\n}\nfunction isSupersetOf(set) {\n  const s = get(set).setNum;\n  return (notes) => {\n    const o = get(notes).setNum;\n    return s && s !== o && (o | s) === o;\n  };\n}\nfunction isNoteIncludedIn(set) {\n  const s = get(set);\n  return (noteName) => {\n    const n = note(noteName);\n    return s && !n.empty && s.chroma.charAt(n.chroma) === \"1\";\n  };\n}\nvar includes = isNoteIncludedIn;\nfunction filter(set) {\n  const isIncluded = isNoteIncludedIn(set);\n  return (notes) => {\n    return notes.filter(isIncluded);\n  };\n}\nvar pcset_default = {\n  get,\n  chroma,\n  num,\n  intervals,\n  chromas,\n  isSupersetOf,\n  isSubsetOf,\n  isNoteIncludedIn,\n  isEqual,\n  filter,\n  modes,\n  pcset\n};\nfunction chromaRotations(chroma2) {\n  const binary = chroma2.split(\"\");\n  return binary.map((_, i) => rotate(i, binary).join(\"\"));\n}\nfunction chromaToPcset(chroma2) {\n  const setNum = chromaToNumber(chroma2);\n  const normalizedNum = chromaRotations(chroma2).map(chromaToNumber).filter((n) => n >= 2048).sort()[0];\n  const normalized = setNumToChroma(normalizedNum);\n  const intervals2 = chromaToIntervals(chroma2);\n  return {\n    empty: false,\n    name: \"\",\n    setNum,\n    chroma: chroma2,\n    normalized,\n    intervals: intervals2\n  };\n}\nfunction listToChroma(set) {\n  if (set.length === 0) {\n    return EmptyPcset.chroma;\n  }\n  let pitch;\n  const binary = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  for (let i = 0; i < set.length; i++) {\n    pitch = note(set[i]);\n    if (pitch.empty)\n      pitch = interval(set[i]);\n    if (!pitch.empty)\n      binary[pitch.chroma] = 1;\n  }\n  return binary.join(\"\");\n}\nexport {\n  EmptyPcset,\n  chromaToIntervals,\n  chromas,\n  pcset_default as default,\n  filter,\n  get,\n  includes,\n  isEqual,\n  isNoteIncludedIn,\n  isSubsetOf,\n  isSupersetOf,\n  modes,\n  pcset\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { deprecate } from \"@tonaljs/core\";\nimport {\n  EmptyPcset,\n  get as pcset\n} from \"@tonaljs/pcset\";\n\n// data.ts\nvar CHORDS = [\n  [\"1P 3M 5P\", \"major\", \"M ^  maj\"],\n  [\"1P 3M 5P 7M\", \"major seventh\", \"maj7 \\u0394 ma7 M7 Maj7 ^7\"],\n  [\"1P 3M 5P 7M 9M\", \"major ninth\", \"maj9 \\u03949 ^9\"],\n  [\"1P 3M 5P 7M 9M 13M\", \"major thirteenth\", \"maj13 Maj13 ^13\"],\n  [\"1P 3M 5P 6M\", \"sixth\", \"6 add6 add13 M6\"],\n  [\"1P 3M 5P 6M 9M\", \"sixth/ninth\", \"6/9 69 M69\"],\n  [\"1P 3M 6m 7M\", \"major seventh flat sixth\", \"M7b6 ^7b6\"],\n  [\n    \"1P 3M 5P 7M 11A\",\n    \"major seventh sharp eleventh\",\n    \"maj#4 \\u0394#4 \\u0394#11 M7#11 ^7#11 maj7#11\"\n  ],\n  [\"1P 3m 5P\", \"minor\", \"m min -\"],\n  [\"1P 3m 5P 7m\", \"minor seventh\", \"m7 min7 mi7 -7\"],\n  [\n    \"1P 3m 5P 7M\",\n    \"minor/major seventh\",\n    \"m/ma7 m/maj7 mM7 mMaj7 m/M7 -\\u03947 m\\u0394 -^7\"\n  ],\n  [\"1P 3m 5P 6M\", \"minor sixth\", \"m6 -6\"],\n  [\"1P 3m 5P 7m 9M\", \"minor ninth\", \"m9 -9\"],\n  [\"1P 3m 5P 7M 9M\", \"minor/major ninth\", \"mM9 mMaj9 -^9\"],\n  [\"1P 3m 5P 7m 9M 11P\", \"minor eleventh\", \"m11 -11\"],\n  [\"1P 3m 5P 7m 9M 13M\", \"minor thirteenth\", \"m13 -13\"],\n  [\"1P 3m 5d\", \"diminished\", \"dim \\xB0 o\"],\n  [\"1P 3m 5d 7d\", \"diminished seventh\", \"dim7 \\xB07 o7\"],\n  [\"1P 3m 5d 7m\", \"half-diminished\", \"m7b5 \\xF8 -7b5 h7 h\"],\n  [\"1P 3M 5P 7m\", \"dominant seventh\", \"7 dom\"],\n  [\"1P 3M 5P 7m 9M\", \"dominant ninth\", \"9\"],\n  [\"1P 3M 5P 7m 9M 13M\", \"dominant thirteenth\", \"13\"],\n  [\"1P 3M 5P 7m 11A\", \"lydian dominant seventh\", \"7#11 7#4\"],\n  [\"1P 3M 5P 7m 9m\", \"dominant flat ninth\", \"7b9\"],\n  [\"1P 3M 5P 7m 9A\", \"dominant sharp ninth\", \"7#9\"],\n  [\"1P 3M 7m 9m\", \"altered\", \"alt7\"],\n  [\"1P 4P 5P\", \"suspended fourth\", \"sus4 sus\"],\n  [\"1P 2M 5P\", \"suspended second\", \"sus2\"],\n  [\"1P 4P 5P 7m\", \"suspended fourth seventh\", \"7sus4 7sus\"],\n  [\"1P 5P 7m 9M 11P\", \"eleventh\", \"11\"],\n  [\n    \"1P 4P 5P 7m 9m\",\n    \"suspended fourth flat ninth\",\n    \"b9sus phryg 7b9sus 7b9sus4\"\n  ],\n  [\"1P 5P\", \"fifth\", \"5\"],\n  [\"1P 3M 5A\", \"augmented\", \"aug + +5 ^#5\"],\n  [\"1P 3m 5A\", \"minor augmented\", \"m#5 -#5 m+\"],\n  [\"1P 3M 5A 7M\", \"augmented seventh\", \"maj7#5 maj7+5 +maj7 ^7#5\"],\n  [\n    \"1P 3M 5P 7M 9M 11A\",\n    \"major sharp eleventh (lydian)\",\n    \"maj9#11 \\u03949#11 ^9#11\"\n  ],\n  [\"1P 2M 4P 5P\", \"\", \"sus24 sus4add9\"],\n  [\"1P 3M 5A 7M 9M\", \"\", \"maj9#5 Maj9#5\"],\n  [\"1P 3M 5A 7m\", \"\", \"7#5 +7 7+ 7aug aug7\"],\n  [\"1P 3M 5A 7m 9A\", \"\", \"7#5#9 7#9#5 7alt\"],\n  [\"1P 3M 5A 7m 9M\", \"\", \"9#5 9+\"],\n  [\"1P 3M 5A 7m 9M 11A\", \"\", \"9#5#11\"],\n  [\"1P 3M 5A 7m 9m\", \"\", \"7#5b9 7b9#5\"],\n  [\"1P 3M 5A 7m 9m 11A\", \"\", \"7#5b9#11\"],\n  [\"1P 3M 5A 9A\", \"\", \"+add#9\"],\n  [\"1P 3M 5A 9M\", \"\", \"M#5add9 +add9\"],\n  [\"1P 3M 5P 6M 11A\", \"\", \"M6#11 M6b5 6#11 6b5\"],\n  [\"1P 3M 5P 6M 7M 9M\", \"\", \"M7add13\"],\n  [\"1P 3M 5P 6M 9M 11A\", \"\", \"69#11\"],\n  [\"1P 3m 5P 6M 9M\", \"\", \"m69 -69\"],\n  [\"1P 3M 5P 6m 7m\", \"\", \"7b6\"],\n  [\"1P 3M 5P 7M 9A 11A\", \"\", \"maj7#9#11\"],\n  [\"1P 3M 5P 7M 9M 11A 13M\", \"\", \"M13#11 maj13#11 M13+4 M13#4\"],\n  [\"1P 3M 5P 7M 9m\", \"\", \"M7b9\"],\n  [\"1P 3M 5P 7m 11A 13m\", \"\", \"7#11b13 7b5b13\"],\n  [\"1P 3M 5P 7m 13M\", \"\", \"7add6 67 7add13\"],\n  [\"1P 3M 5P 7m 9A 11A\", \"\", \"7#9#11 7b5#9 7#9b5\"],\n  [\"1P 3M 5P 7m 9A 11A 13M\", \"\", \"13#9#11\"],\n  [\"1P 3M 5P 7m 9A 11A 13m\", \"\", \"7#9#11b13\"],\n  [\"1P 3M 5P 7m 9A 13M\", \"\", \"13#9\"],\n  [\"1P 3M 5P 7m 9A 13m\", \"\", \"7#9b13\"],\n  [\"1P 3M 5P 7m 9M 11A\", \"\", \"9#11 9+4 9#4\"],\n  [\"1P 3M 5P 7m 9M 11A 13M\", \"\", \"13#11 13+4 13#4\"],\n  [\"1P 3M 5P 7m 9M 11A 13m\", \"\", \"9#11b13 9b5b13\"],\n  [\"1P 3M 5P 7m 9m 11A\", \"\", \"7b9#11 7b5b9 7b9b5\"],\n  [\"1P 3M 5P 7m 9m 11A 13M\", \"\", \"13b9#11\"],\n  [\"1P 3M 5P 7m 9m 11A 13m\", \"\", \"7b9b13#11 7b9#11b13 7b5b9b13\"],\n  [\"1P 3M 5P 7m 9m 13M\", \"\", \"13b9\"],\n  [\"1P 3M 5P 7m 9m 13m\", \"\", \"7b9b13\"],\n  [\"1P 3M 5P 7m 9m 9A\", \"\", \"7b9#9\"],\n  [\"1P 3M 5P 9M\", \"\", \"Madd9 2 add9 add2\"],\n  [\"1P 3M 5P 9m\", \"\", \"Maddb9\"],\n  [\"1P 3M 5d\", \"\", \"Mb5\"],\n  [\"1P 3M 5d 6M 7m 9M\", \"\", \"13b5\"],\n  [\"1P 3M 5d 7M\", \"\", \"M7b5\"],\n  [\"1P 3M 5d 7M 9M\", \"\", \"M9b5\"],\n  [\"1P 3M 5d 7m\", \"\", \"7b5\"],\n  [\"1P 3M 5d 7m 9M\", \"\", \"9b5\"],\n  [\"1P 3M 7m\", \"\", \"7no5\"],\n  [\"1P 3M 7m 13m\", \"\", \"7b13\"],\n  [\"1P 3M 7m 9M\", \"\", \"9no5\"],\n  [\"1P 3M 7m 9M 13M\", \"\", \"13no5\"],\n  [\"1P 3M 7m 9M 13m\", \"\", \"9b13\"],\n  [\"1P 3m 4P 5P\", \"\", \"madd4\"],\n  [\"1P 3m 5P 6m 7M\", \"\", \"mMaj7b6\"],\n  [\"1P 3m 5P 6m 7M 9M\", \"\", \"mMaj9b6\"],\n  [\"1P 3m 5P 7m 11P\", \"\", \"m7add11 m7add4\"],\n  [\"1P 3m 5P 9M\", \"\", \"madd9\"],\n  [\"1P 3m 5d 6M 7M\", \"\", \"o7M7\"],\n  [\"1P 3m 5d 7M\", \"\", \"oM7\"],\n  [\"1P 3m 6m 7M\", \"\", \"mb6M7\"],\n  [\"1P 3m 6m 7m\", \"\", \"m7#5\"],\n  [\"1P 3m 6m 7m 9M\", \"\", \"m9#5\"],\n  [\"1P 3m 5A 7m 9M 11P\", \"\", \"m11A\"],\n  [\"1P 3m 6m 9m\", \"\", \"mb6b9\"],\n  [\"1P 2M 3m 5d 7m\", \"\", \"m9b5\"],\n  [\"1P 4P 5A 7M\", \"\", \"M7#5sus4\"],\n  [\"1P 4P 5A 7M 9M\", \"\", \"M9#5sus4\"],\n  [\"1P 4P 5A 7m\", \"\", \"7#5sus4\"],\n  [\"1P 4P 5P 7M\", \"\", \"M7sus4\"],\n  [\"1P 4P 5P 7M 9M\", \"\", \"M9sus4\"],\n  [\"1P 4P 5P 7m 9M\", \"\", \"9sus4 9sus\"],\n  [\"1P 4P 5P 7m 9M 13M\", \"\", \"13sus4 13sus\"],\n  [\"1P 4P 5P 7m 9m 13m\", \"\", \"7sus4b9b13 7b9b13sus4\"],\n  [\"1P 4P 7m 10m\", \"\", \"4 quartal\"],\n  [\"1P 5P 7m 9m 11P\", \"\", \"11b9\"]\n];\nvar data_default = CHORDS;\n\n// index.ts\nvar NoChordType = {\n  ...EmptyPcset,\n  name: \"\",\n  quality: \"Unknown\",\n  intervals: [],\n  aliases: []\n};\nvar dictionary = [];\nvar index = {};\nfunction get(type) {\n  return index[type] || NoChordType;\n}\nvar chordType = deprecate(\"ChordType.chordType\", \"ChordType.get\", get);\nfunction names() {\n  return dictionary.map((chord) => chord.name).filter((x) => x);\n}\nfunction symbols() {\n  return dictionary.map((chord) => chord.aliases[0]).filter((x) => x);\n}\nfunction keys() {\n  return Object.keys(index);\n}\nfunction all() {\n  return dictionary.slice();\n}\nvar entries = deprecate(\"ChordType.entries\", \"ChordType.all\", all);\nfunction removeAll() {\n  dictionary = [];\n  index = {};\n}\nfunction add(intervals, aliases, fullName) {\n  const quality = getQuality(intervals);\n  const chord = {\n    ...pcset(intervals),\n    name: fullName || \"\",\n    quality,\n    intervals,\n    aliases\n  };\n  dictionary.push(chord);\n  if (chord.name) {\n    index[chord.name] = chord;\n  }\n  index[chord.setNum] = chord;\n  index[chord.chroma] = chord;\n  chord.aliases.forEach((alias) => addAlias(chord, alias));\n}\nfunction addAlias(chord, alias) {\n  index[alias] = chord;\n}\nfunction getQuality(intervals) {\n  const has = (interval) => intervals.indexOf(interval) !== -1;\n  return has(\"5A\") ? \"Augmented\" : has(\"3M\") ? \"Major\" : has(\"5d\") ? \"Diminished\" : has(\"3m\") ? \"Minor\" : \"Unknown\";\n}\ndata_default.forEach(\n  ([ivls, fullName, names2]) => add(ivls.split(\" \"), names2.split(\" \"), fullName)\n);\ndictionary.sort((a, b) => a.setNum - b.setNum);\nvar chord_type_default = {\n  names,\n  symbols,\n  get,\n  all,\n  add,\n  removeAll,\n  keys,\n  entries,\n  chordType\n};\nexport {\n  add,\n  addAlias,\n  all,\n  chordType,\n  chord_type_default as default,\n  entries,\n  get,\n  keys,\n  names,\n  removeAll,\n  symbols\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { all } from \"@tonaljs/chord-type\";\nimport { note } from \"@tonaljs/core\";\nimport { modes } from \"@tonaljs/pcset\";\nvar namedSet = (notes) => {\n  const pcToName = notes.reduce((record, n) => {\n    const chroma = note(n).chroma;\n    if (chroma !== void 0) {\n      record[chroma] = record[chroma] || note(n).name;\n    }\n    return record;\n  }, {});\n  return (chroma) => pcToName[chroma];\n};\nfunction detect(source) {\n  const notes = source.map((n) => note(n).pc).filter((x) => x);\n  if (note.length === 0) {\n    return [];\n  }\n  const found = findExactMatches(notes, 1);\n  return found.filter((chord) => chord.weight).sort((a, b) => b.weight - a.weight).map((chord) => chord.name);\n}\nfunction findExactMatches(notes, weight) {\n  const tonic = notes[0];\n  const tonicChroma = note(tonic).chroma;\n  const noteName = namedSet(notes);\n  const allModes = modes(notes, false);\n  const found = [];\n  allModes.forEach((mode, index) => {\n    const chordTypes = all().filter((chordType) => chordType.chroma === mode);\n    chordTypes.forEach((chordType) => {\n      const chordName = chordType.aliases[0];\n      const baseNote = noteName(index);\n      const isInversion = index !== tonicChroma;\n      if (isInversion) {\n        found.push({\n          weight: 0.5 * weight,\n          name: `${baseNote}${chordName}/${tonic}`\n        });\n      } else {\n        found.push({ weight: 1 * weight, name: `${baseNote}${chordName}` });\n      }\n    });\n  });\n  return found;\n}\nvar chord_detect_default = { detect };\nexport {\n  chord_detect_default as default,\n  detect\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { deprecate } from \"@tonaljs/core\";\nimport {\n  EmptyPcset,\n  get as pcset\n} from \"@tonaljs/pcset\";\n\n// data.ts\nvar SCALES = [\n  [\"1P 2M 3M 5P 6M\", \"major pentatonic\", \"pentatonic\"],\n  [\"1P 3M 4P 5P 7M\", \"ionian pentatonic\"],\n  [\"1P 3M 4P 5P 7m\", \"mixolydian pentatonic\", \"indian\"],\n  [\"1P 2M 4P 5P 6M\", \"ritusen\"],\n  [\"1P 2M 4P 5P 7m\", \"egyptian\"],\n  [\"1P 3M 4P 5d 7m\", \"neopolitan major pentatonic\"],\n  [\"1P 3m 4P 5P 6m\", \"vietnamese 1\"],\n  [\"1P 2m 3m 5P 6m\", \"pelog\"],\n  [\"1P 2m 4P 5P 6m\", \"kumoijoshi\"],\n  [\"1P 2M 3m 5P 6m\", \"hirajoshi\"],\n  [\"1P 2m 4P 5d 7m\", \"iwato\"],\n  [\"1P 2m 4P 5P 7m\", \"in-sen\"],\n  [\"1P 3M 4A 5P 7M\", \"lydian pentatonic\", \"chinese\"],\n  [\"1P 3m 4P 6m 7m\", \"malkos raga\"],\n  [\"1P 3m 4P 5d 7m\", \"locrian pentatonic\", \"minor seven flat five pentatonic\"],\n  [\"1P 3m 4P 5P 7m\", \"minor pentatonic\", \"vietnamese 2\"],\n  [\"1P 3m 4P 5P 6M\", \"minor six pentatonic\"],\n  [\"1P 2M 3m 5P 6M\", \"flat three pentatonic\", \"kumoi\"],\n  [\"1P 2M 3M 5P 6m\", \"flat six pentatonic\"],\n  [\"1P 2m 3M 5P 6M\", \"scriabin\"],\n  [\"1P 3M 5d 6m 7m\", \"whole tone pentatonic\"],\n  [\"1P 3M 4A 5A 7M\", \"lydian #5P pentatonic\"],\n  [\"1P 3M 4A 5P 7m\", \"lydian dominant pentatonic\"],\n  [\"1P 3m 4P 5P 7M\", \"minor #7M pentatonic\"],\n  [\"1P 3m 4d 5d 7m\", \"super locrian pentatonic\"],\n  [\"1P 2M 3m 4P 5P 7M\", \"minor hexatonic\"],\n  [\"1P 2A 3M 5P 5A 7M\", \"augmented\"],\n  [\"1P 2M 3m 3M 5P 6M\", \"major blues\"],\n  [\"1P 2M 4P 5P 6M 7m\", \"piongio\"],\n  [\"1P 2m 3M 4A 6M 7m\", \"prometheus neopolitan\"],\n  [\"1P 2M 3M 4A 6M 7m\", \"prometheus\"],\n  [\"1P 2m 3M 5d 6m 7m\", \"mystery #1\"],\n  [\"1P 2m 3M 4P 5A 6M\", \"six tone symmetric\"],\n  [\"1P 2M 3M 4A 5A 6A\", \"whole tone\", \"messiaen's mode #1\"],\n  [\"1P 2m 4P 4A 5P 7M\", \"messiaen's mode #5\"],\n  [\"1P 3m 4P 5d 5P 7m\", \"minor blues\", \"blues\"],\n  [\"1P 2M 3M 4P 5d 6m 7m\", \"locrian major\", \"arabian\"],\n  [\"1P 2m 3M 4A 5P 6m 7M\", \"double harmonic lydian\"],\n  [\"1P 2M 3m 4P 5P 6m 7M\", \"harmonic minor\"],\n  [\n    \"1P 2m 2A 3M 4A 6m 7m\",\n    \"altered\",\n    \"super locrian\",\n    \"diminished whole tone\",\n    \"pomeroy\"\n  ],\n  [\"1P 2M 3m 4P 5d 6m 7m\", \"locrian #2\", \"half-diminished\", \"aeolian b5\"],\n  [\n    \"1P 2M 3M 4P 5P 6m 7m\",\n    \"mixolydian b6\",\n    \"melodic minor fifth mode\",\n    \"hindu\"\n  ],\n  [\"1P 2M 3M 4A 5P 6M 7m\", \"lydian dominant\", \"lydian b7\", \"overtone\"],\n  [\"1P 2M 3M 4A 5P 6M 7M\", \"lydian\"],\n  [\"1P 2M 3M 4A 5A 6M 7M\", \"lydian augmented\"],\n  [\n    \"1P 2m 3m 4P 5P 6M 7m\",\n    \"dorian b2\",\n    \"phrygian #6\",\n    \"melodic minor second mode\"\n  ],\n  [\"1P 2M 3m 4P 5P 6M 7M\", \"melodic minor\"],\n  [\"1P 2m 3m 4P 5d 6m 7m\", \"locrian\"],\n  [\n    \"1P 2m 3m 4d 5d 6m 7d\",\n    \"ultralocrian\",\n    \"superlocrian bb7\",\n    \"superlocrian diminished\"\n  ],\n  [\"1P 2m 3m 4P 5d 6M 7m\", \"locrian 6\", \"locrian natural 6\", \"locrian sharp 6\"],\n  [\"1P 2A 3M 4P 5P 5A 7M\", \"augmented heptatonic\"],\n  [\n    \"1P 2M 3m 4A 5P 6M 7m\",\n    \"dorian #4\",\n    \"ukrainian dorian\",\n    \"romanian minor\",\n    \"altered dorian\"\n  ],\n  [\"1P 2M 3m 4A 5P 6M 7M\", \"lydian diminished\"],\n  [\"1P 2m 3m 4P 5P 6m 7m\", \"phrygian\"],\n  [\"1P 2M 3M 4A 5A 7m 7M\", \"leading whole tone\"],\n  [\"1P 2M 3M 4A 5P 6m 7m\", \"lydian minor\"],\n  [\"1P 2m 3M 4P 5P 6m 7m\", \"phrygian dominant\", \"spanish\", \"phrygian major\"],\n  [\"1P 2m 3m 4P 5P 6m 7M\", \"balinese\"],\n  [\"1P 2m 3m 4P 5P 6M 7M\", \"neopolitan major\"],\n  [\"1P 2M 3m 4P 5P 6m 7m\", \"aeolian\", \"minor\"],\n  [\"1P 2M 3M 4P 5P 6m 7M\", \"harmonic major\"],\n  [\"1P 2m 3M 4P 5P 6m 7M\", \"double harmonic major\", \"gypsy\"],\n  [\"1P 2M 3m 4P 5P 6M 7m\", \"dorian\"],\n  [\"1P 2M 3m 4A 5P 6m 7M\", \"hungarian minor\"],\n  [\"1P 2A 3M 4A 5P 6M 7m\", \"hungarian major\"],\n  [\"1P 2m 3M 4P 5d 6M 7m\", \"oriental\"],\n  [\"1P 2m 3m 3M 4A 5P 7m\", \"flamenco\"],\n  [\"1P 2m 3m 4A 5P 6m 7M\", \"todi raga\"],\n  [\"1P 2M 3M 4P 5P 6M 7m\", \"mixolydian\", \"dominant\"],\n  [\"1P 2m 3M 4P 5d 6m 7M\", \"persian\"],\n  [\"1P 2M 3M 4P 5P 6M 7M\", \"major\", \"ionian\"],\n  [\"1P 2m 3M 5d 6m 7m 7M\", \"enigmatic\"],\n  [\n    \"1P 2M 3M 4P 5A 6M 7M\",\n    \"major augmented\",\n    \"major #5\",\n    \"ionian augmented\",\n    \"ionian #5\"\n  ],\n  [\"1P 2A 3M 4A 5P 6M 7M\", \"lydian #9\"],\n  [\"1P 2m 2M 4P 4A 5P 6m 7M\", \"messiaen's mode #4\"],\n  [\"1P 2m 3M 4P 4A 5P 6m 7M\", \"purvi raga\"],\n  [\"1P 2m 3m 3M 4P 5P 6m 7m\", \"spanish heptatonic\"],\n  [\"1P 2M 3M 4P 5P 6M 7m 7M\", \"bebop\"],\n  [\"1P 2M 3m 3M 4P 5P 6M 7m\", \"bebop minor\"],\n  [\"1P 2M 3M 4P 5P 5A 6M 7M\", \"bebop major\"],\n  [\"1P 2m 3m 4P 5d 5P 6m 7m\", \"bebop locrian\"],\n  [\"1P 2M 3m 4P 5P 6m 7m 7M\", \"minor bebop\"],\n  [\"1P 2M 3m 4P 5d 6m 6M 7M\", \"diminished\", \"whole-half diminished\"],\n  [\"1P 2M 3M 4P 5d 5P 6M 7M\", \"ichikosucho\"],\n  [\"1P 2M 3m 4P 5P 6m 6M 7M\", \"minor six diminished\"],\n  [\n    \"1P 2m 3m 3M 4A 5P 6M 7m\",\n    \"half-whole diminished\",\n    \"dominant diminished\",\n    \"messiaen's mode #2\"\n  ],\n  [\"1P 3m 3M 4P 5P 6M 7m 7M\", \"kafi raga\"],\n  [\"1P 2M 3M 4P 4A 5A 6A 7M\", \"messiaen's mode #6\"],\n  [\"1P 2M 3m 3M 4P 5d 5P 6M 7m\", \"composite blues\"],\n  [\"1P 2M 3m 3M 4A 5P 6m 7m 7M\", \"messiaen's mode #3\"],\n  [\"1P 2m 2M 3m 4P 4A 5P 6m 6M 7M\", \"messiaen's mode #7\"],\n  [\"1P 2m 2M 3m 3M 4P 5d 5P 6m 6M 7m 7M\", \"chromatic\"]\n];\nvar data_default = SCALES;\n\n// index.ts\nvar NoScaleType = {\n  ...EmptyPcset,\n  intervals: [],\n  aliases: []\n};\nvar dictionary = [];\nvar index = {};\nfunction names() {\n  return dictionary.map((scale) => scale.name);\n}\nfunction get(type) {\n  return index[type] || NoScaleType;\n}\nvar scaleType = deprecate(\n  \"ScaleDictionary.scaleType\",\n  \"ScaleType.get\",\n  get\n);\nfunction all() {\n  return dictionary.slice();\n}\nvar entries = deprecate(\n  \"ScaleDictionary.entries\",\n  \"ScaleType.all\",\n  all\n);\nfunction keys() {\n  return Object.keys(index);\n}\nfunction removeAll() {\n  dictionary = [];\n  index = {};\n}\nfunction add(intervals, name, aliases = []) {\n  const scale = { ...pcset(intervals), name, intervals, aliases };\n  dictionary.push(scale);\n  index[scale.name] = scale;\n  index[scale.setNum] = scale;\n  index[scale.chroma] = scale;\n  scale.aliases.forEach((alias) => addAlias(scale, alias));\n  return scale;\n}\nfunction addAlias(scale, alias) {\n  index[alias] = scale;\n}\ndata_default.forEach(\n  ([ivls, name, ...aliases]) => add(ivls.split(\" \"), name, aliases)\n);\nvar scale_type_default = {\n  names,\n  get,\n  all,\n  add,\n  removeAll,\n  keys,\n  entries,\n  scaleType\n};\nexport {\n  NoScaleType,\n  add,\n  addAlias,\n  all,\n  scale_type_default as default,\n  entries,\n  get,\n  keys,\n  names,\n  removeAll,\n  scaleType\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { detect } from \"@tonaljs/chord-detect\";\nimport {\n  all as chordTypes,\n  get as getChordType\n} from \"@tonaljs/chord-type\";\nimport {\n  deprecate,\n  distance,\n  note,\n  tokenizeNote,\n  transpose as transposeNote\n} from \"@tonaljs/core\";\nimport { isSubsetOf, isSupersetOf } from \"@tonaljs/pcset\";\nimport { all as scaleTypes } from \"@tonaljs/scale-type\";\nimport { detect as detect2 } from \"@tonaljs/chord-detect\";\nvar NoChord = {\n  empty: true,\n  name: \"\",\n  symbol: \"\",\n  root: \"\",\n  rootDegree: 0,\n  type: \"\",\n  tonic: null,\n  setNum: NaN,\n  quality: \"Unknown\",\n  chroma: \"\",\n  normalized: \"\",\n  aliases: [],\n  notes: [],\n  intervals: []\n};\nvar NUM_TYPES = /^(6|64|7|9|11|13)$/;\nfunction tokenize(name) {\n  const [letter, acc, oct, type] = tokenizeNote(name);\n  if (letter === \"\") {\n    return [\"\", name];\n  }\n  if (letter === \"A\" && type === \"ug\") {\n    return [\"\", \"aug\"];\n  }\n  if (!type && (oct === \"4\" || oct === \"5\")) {\n    return [letter + acc, oct];\n  }\n  if (NUM_TYPES.test(oct)) {\n    return [letter + acc, oct + type];\n  } else {\n    return [letter + acc + oct, type];\n  }\n}\nfunction get(src) {\n  if (src === \"\") {\n    return NoChord;\n  }\n  if (Array.isArray(src) && src.length === 2) {\n    return getChord(src[1], src[0]);\n  } else {\n    const [tonic, type] = tokenize(src);\n    const chord2 = getChord(type, tonic);\n    return chord2.empty ? getChord(src) : chord2;\n  }\n}\nfunction getChord(typeName, optionalTonic, optionalRoot) {\n  const type = getChordType(typeName);\n  const tonic = note(optionalTonic || \"\");\n  const root = note(optionalRoot || \"\");\n  if (type.empty || optionalTonic && tonic.empty || optionalRoot && root.empty) {\n    return NoChord;\n  }\n  const rootInterval = distance(tonic.pc, root.pc);\n  const rootDegree = type.intervals.indexOf(rootInterval) + 1;\n  if (!root.empty && !rootDegree) {\n    return NoChord;\n  }\n  const intervals = Array.from(type.intervals);\n  for (let i = 1; i < rootDegree; i++) {\n    const num = intervals[0][0];\n    const quality = intervals[0][1];\n    const newNum = parseInt(num, 10) + 7;\n    intervals.push(`${newNum}${quality}`);\n    intervals.shift();\n  }\n  const notes = tonic.empty ? [] : intervals.map((i) => transposeNote(tonic, i));\n  typeName = type.aliases.indexOf(typeName) !== -1 ? typeName : type.aliases[0];\n  const symbol = `${tonic.empty ? \"\" : tonic.pc}${typeName}${root.empty || rootDegree <= 1 ? \"\" : \"/\" + root.pc}`;\n  const name = `${optionalTonic ? tonic.pc + \" \" : \"\"}${type.name}${rootDegree > 1 && optionalRoot ? \" over \" + root.pc : \"\"}`;\n  return {\n    ...type,\n    name,\n    symbol,\n    type: type.name,\n    root: root.name,\n    intervals,\n    rootDegree,\n    tonic: tonic.name,\n    notes\n  };\n}\nvar chord = deprecate(\"Chord.chord\", \"Chord.get\", get);\nfunction transpose(chordName, interval) {\n  const [tonic, type] = tokenize(chordName);\n  if (!tonic) {\n    return chordName;\n  }\n  return transposeNote(tonic, interval) + type;\n}\nfunction chordScales(name) {\n  const s = get(name);\n  const isChordIncluded = isSupersetOf(s.chroma);\n  return scaleTypes().filter((scale) => isChordIncluded(scale.chroma)).map((scale) => scale.name);\n}\nfunction extended(chordName) {\n  const s = get(chordName);\n  const isSuperset = isSupersetOf(s.chroma);\n  return chordTypes().filter((chord2) => isSuperset(chord2.chroma)).map((chord2) => s.tonic + chord2.aliases[0]);\n}\nfunction reduced(chordName) {\n  const s = get(chordName);\n  const isSubset = isSubsetOf(s.chroma);\n  return chordTypes().filter((chord2) => isSubset(chord2.chroma)).map((chord2) => s.tonic + chord2.aliases[0]);\n}\nvar chord_default = {\n  getChord,\n  get,\n  detect,\n  chordScales,\n  extended,\n  reduced,\n  tokenize,\n  transpose,\n  chord\n};\nexport {\n  chord,\n  chordScales,\n  chord_default as default,\n  detect2 as detect,\n  extended,\n  get,\n  getChord,\n  reduced,\n  tokenize,\n  transpose\n};\n//# sourceMappingURL=index.mjs.map","// data.ts\nvar DATA = [\n  [\n    0.125,\n    \"dl\",\n    [\"large\", \"duplex longa\", \"maxima\", \"octuple\", \"octuple whole\"]\n  ],\n  [0.25, \"l\", [\"long\", \"longa\"]],\n  [0.5, \"d\", [\"double whole\", \"double\", \"breve\"]],\n  [1, \"w\", [\"whole\", \"semibreve\"]],\n  [2, \"h\", [\"half\", \"minim\"]],\n  [4, \"q\", [\"quarter\", \"crotchet\"]],\n  [8, \"e\", [\"eighth\", \"quaver\"]],\n  [16, \"s\", [\"sixteenth\", \"semiquaver\"]],\n  [32, \"t\", [\"thirty-second\", \"demisemiquaver\"]],\n  [64, \"sf\", [\"sixty-fourth\", \"hemidemisemiquaver\"]],\n  [128, \"h\", [\"hundred twenty-eighth\"]],\n  [256, \"th\", [\"two hundred fifty-sixth\"]]\n];\nvar data_default = DATA;\n\n// index.ts\nvar VALUES = [];\ndata_default.forEach(\n  ([denominator, shorthand, names2]) => add(denominator, shorthand, names2)\n);\nvar NoDuration = {\n  empty: true,\n  name: \"\",\n  value: 0,\n  fraction: [0, 0],\n  shorthand: \"\",\n  dots: \"\",\n  names: []\n};\nfunction names() {\n  return VALUES.reduce((names2, duration) => {\n    duration.names.forEach((name) => names2.push(name));\n    return names2;\n  }, []);\n}\nfunction shorthands() {\n  return VALUES.map((dur) => dur.shorthand);\n}\nvar REGEX = /^([^.]+)(\\.*)$/;\nfunction get(name) {\n  const [_, simple, dots] = REGEX.exec(name) || [];\n  const base = VALUES.find(\n    (dur) => dur.shorthand === simple || dur.names.includes(simple)\n  );\n  if (!base) {\n    return NoDuration;\n  }\n  const fraction2 = calcDots(base.fraction, dots.length);\n  const value2 = fraction2[0] / fraction2[1];\n  return { ...base, name, dots, value: value2, fraction: fraction2 };\n}\nvar value = (name) => get(name).value;\nvar fraction = (name) => get(name).fraction;\nvar duration_value_default = { names, shorthands, get, value, fraction };\nfunction add(denominator, shorthand, names2) {\n  VALUES.push({\n    empty: false,\n    dots: \"\",\n    name: \"\",\n    value: 1 / denominator,\n    fraction: denominator < 1 ? [1 / denominator, 1] : [1, denominator],\n    shorthand,\n    names: names2\n  });\n}\nfunction calcDots(fraction2, dots) {\n  const pow = Math.pow(2, dots);\n  let numerator = fraction2[0] * pow;\n  let denominator = fraction2[1] * pow;\n  const base = numerator;\n  for (let i = 0; i < dots; i++) {\n    numerator += base / Math.pow(2, i + 1);\n  }\n  while (numerator % 2 === 0 && denominator % 2 === 0) {\n    numerator /= 2;\n    denominator /= 2;\n  }\n  return [numerator, denominator];\n}\nexport {\n  duration_value_default as default,\n  fraction,\n  get,\n  names,\n  shorthands,\n  value\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport {\n  coordToInterval,\n  distance as dist,\n  interval as props\n} from \"@tonaljs/core\";\nfunction names() {\n  return \"1P 2M 3M 4P 5P 6m 7m\".split(\" \");\n}\nvar get = props;\nvar name = (name2) => props(name2).name;\nvar semitones = (name2) => props(name2).semitones;\nvar quality = (name2) => props(name2).q;\nvar num = (name2) => props(name2).num;\nfunction simplify(name2) {\n  const i = props(name2);\n  return i.empty ? \"\" : i.simple + i.q;\n}\nfunction invert(name2) {\n  const i = props(name2);\n  if (i.empty) {\n    return \"\";\n  }\n  const step = (7 - i.step) % 7;\n  const alt = i.type === \"perfectable\" ? -i.alt : -(i.alt + 1);\n  return props({ step, alt, oct: i.oct, dir: i.dir }).name;\n}\nvar IN = [1, 2, 2, 3, 3, 4, 5, 5, 6, 6, 7, 7];\nvar IQ = \"P m M m M P d P m M m M\".split(\" \");\nfunction fromSemitones(semitones2) {\n  const d = semitones2 < 0 ? -1 : 1;\n  const n = Math.abs(semitones2);\n  const c = n % 12;\n  const o = Math.floor(n / 12);\n  return d * (IN[c] + 7 * o) + IQ[c];\n}\nvar distance = dist;\nvar add = combinator((a, b) => [a[0] + b[0], a[1] + b[1]]);\nvar addTo = (interval) => (other) => add(interval, other);\nvar substract = combinator((a, b) => [a[0] - b[0], a[1] - b[1]]);\nfunction transposeFifths(interval, fifths) {\n  const ivl = get(interval);\n  if (ivl.empty)\n    return \"\";\n  const [nFifths, nOcts, dir] = ivl.coord;\n  return coordToInterval([nFifths + fifths, nOcts, dir]).name;\n}\nvar interval_default = {\n  names,\n  get,\n  name,\n  num,\n  semitones,\n  quality,\n  fromSemitones,\n  distance,\n  invert,\n  simplify,\n  add,\n  addTo,\n  substract,\n  transposeFifths\n};\nfunction combinator(fn) {\n  return (a, b) => {\n    const coordA = props(a).coord;\n    const coordB = props(b).coord;\n    if (coordA && coordB) {\n      const coord = fn(coordA, coordB);\n      return coordToInterval(coord).name;\n    }\n  };\n}\nexport {\n  add,\n  addTo,\n  interval_default as default,\n  distance,\n  fromSemitones,\n  get,\n  invert,\n  name,\n  names,\n  num,\n  quality,\n  semitones,\n  simplify,\n  substract,\n  transposeFifths\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { note as props } from \"@tonaljs/core\";\nfunction isMidi(arg) {\n  return +arg >= 0 && +arg <= 127;\n}\nfunction toMidi(note) {\n  if (isMidi(note)) {\n    return +note;\n  }\n  const n = props(note);\n  return n.empty ? null : n.midi;\n}\nfunction midiToFreq(midi, tuning = 440) {\n  return Math.pow(2, (midi - 69) / 12) * tuning;\n}\nvar L2 = Math.log(2);\nvar L440 = Math.log(440);\nfunction freqToMidi(freq) {\n  const v = 12 * (Math.log(freq) - L440) / L2 + 69;\n  return Math.round(v * 100) / 100;\n}\nvar SHARPS = \"C C# D D# E F F# G G# A A# B\".split(\" \");\nvar FLATS = \"C Db D Eb E F Gb G Ab A Bb B\".split(\" \");\nfunction midiToNoteName(midi, options = {}) {\n  if (isNaN(midi) || midi === -Infinity || midi === Infinity)\n    return \"\";\n  midi = Math.round(midi);\n  const pcs = options.sharps === true ? SHARPS : FLATS;\n  const pc = pcs[midi % 12];\n  if (options.pitchClass) {\n    return pc;\n  }\n  const o = Math.floor(midi / 12) - 1;\n  return pc + o;\n}\nvar midi_default = { isMidi, toMidi, midiToFreq, midiToNoteName, freqToMidi };\nexport {\n  midi_default as default,\n  freqToMidi,\n  isMidi,\n  midiToFreq,\n  midiToNoteName,\n  toMidi\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport {\n  coordToNote,\n  note as props,\n  transpose as _tr\n} from \"@tonaljs/core\";\nimport { midiToNoteName, freqToMidi } from \"@tonaljs/midi\";\nvar NAMES = [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"];\nvar toName = (n) => n.name;\nvar onlyNotes = (array) => array.map(props).filter((n) => !n.empty);\nfunction names(array) {\n  if (array === void 0) {\n    return NAMES.slice();\n  } else if (!Array.isArray(array)) {\n    return [];\n  } else {\n    return onlyNotes(array).map(toName);\n  }\n}\nvar get = props;\nvar name = (note) => get(note).name;\nvar pitchClass = (note) => get(note).pc;\nvar accidentals = (note) => get(note).acc;\nvar octave = (note) => get(note).oct;\nvar midi = (note) => get(note).midi;\nvar freq = (note) => get(note).freq;\nvar chroma = (note) => get(note).chroma;\nfunction fromMidi(midi2) {\n  return midiToNoteName(midi2);\n}\nfunction fromFreq(freq2) {\n  return midiToNoteName(freqToMidi(freq2));\n}\nfunction fromFreqSharps(freq2) {\n  return midiToNoteName(freqToMidi(freq2), { sharps: true });\n}\nfunction fromMidiSharps(midi2) {\n  return midiToNoteName(midi2, { sharps: true });\n}\nvar transpose = _tr;\nvar tr = _tr;\nvar transposeBy = (interval) => (note) => transpose(note, interval);\nvar trBy = transposeBy;\nvar transposeFrom = (note) => (interval) => transpose(note, interval);\nvar trFrom = transposeFrom;\nfunction transposeFifths(noteName, fifths) {\n  const note = get(noteName);\n  if (note.empty) {\n    return \"\";\n  }\n  const [nFifths, nOcts] = note.coord;\n  const transposed = nOcts === void 0 ? coordToNote([nFifths + fifths]) : coordToNote([nFifths + fifths, nOcts]);\n  return transposed.name;\n}\nvar trFifths = transposeFifths;\nvar ascending = (a, b) => a.height - b.height;\nvar descending = (a, b) => b.height - a.height;\nfunction sortedNames(notes, comparator) {\n  comparator = comparator || ascending;\n  return onlyNotes(notes).sort(comparator).map(toName);\n}\nfunction sortedUniqNames(notes) {\n  return sortedNames(notes, ascending).filter(\n    (n, i, a) => i === 0 || n !== a[i - 1]\n  );\n}\nvar simplify = (noteName) => {\n  const note = get(noteName);\n  if (note.empty) {\n    return \"\";\n  }\n  return midiToNoteName(note.midi || note.chroma, {\n    sharps: note.alt > 0,\n    pitchClass: note.midi === null\n  });\n};\nfunction enharmonic(noteName, destName) {\n  const src = get(noteName);\n  if (src.empty) {\n    return \"\";\n  }\n  const dest = get(\n    destName || midiToNoteName(src.midi || src.chroma, {\n      sharps: src.alt < 0,\n      pitchClass: true\n    })\n  );\n  if (dest.empty || dest.chroma !== src.chroma) {\n    return \"\";\n  }\n  if (src.oct === void 0) {\n    return dest.pc;\n  }\n  const srcChroma = src.chroma - src.alt;\n  const destChroma = dest.chroma - dest.alt;\n  const destOctOffset = srcChroma > 11 || destChroma < 0 ? -1 : srcChroma < 0 || destChroma > 11 ? 1 : 0;\n  const destOct = src.oct + destOctOffset;\n  return dest.pc + destOct;\n}\nvar note_default = {\n  names,\n  get,\n  name,\n  pitchClass,\n  accidentals,\n  octave,\n  midi,\n  ascending,\n  descending,\n  sortedNames,\n  sortedUniqNames,\n  fromMidi,\n  fromMidiSharps,\n  freq,\n  fromFreq,\n  fromFreqSharps,\n  chroma,\n  transpose,\n  tr,\n  transposeBy,\n  trBy,\n  transposeFrom,\n  trFrom,\n  transposeFifths,\n  trFifths,\n  simplify,\n  enharmonic\n};\nexport {\n  accidentals,\n  ascending,\n  chroma,\n  note_default as default,\n  descending,\n  enharmonic,\n  freq,\n  fromFreq,\n  fromFreqSharps,\n  fromMidi,\n  fromMidiSharps,\n  get,\n  midi,\n  name,\n  names,\n  octave,\n  pitchClass,\n  simplify,\n  sortedNames,\n  sortedUniqNames,\n  tr,\n  trBy,\n  trFifths,\n  trFrom,\n  transpose,\n  transposeBy,\n  transposeFifths,\n  transposeFrom\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport {\n  accToAlt,\n  altToAcc,\n  deprecate,\n  interval,\n  isNamed,\n  isPitch\n} from \"@tonaljs/core\";\nvar NoRomanNumeral = { empty: true, name: \"\", chordType: \"\" };\nvar cache = {};\nfunction get(src) {\n  return typeof src === \"string\" ? cache[src] || (cache[src] = parse(src)) : typeof src === \"number\" ? get(NAMES[src] || \"\") : isPitch(src) ? fromPitch(src) : isNamed(src) ? get(src.name) : NoRomanNumeral;\n}\nvar romanNumeral = deprecate(\n  \"RomanNumeral.romanNumeral\",\n  \"RomanNumeral.get\",\n  get\n);\nfunction names(major = true) {\n  return (major ? NAMES : NAMES_MINOR).slice();\n}\nfunction fromPitch(pitch) {\n  return get(altToAcc(pitch.alt) + NAMES[pitch.step]);\n}\nvar REGEX = /^(#{1,}|b{1,}|x{1,}|)(IV|I{1,3}|VI{0,2}|iv|i{1,3}|vi{0,2})([^IViv]*)$/;\nfunction tokenize(str) {\n  return REGEX.exec(str) || [\"\", \"\", \"\", \"\"];\n}\nvar ROMANS = \"I II III IV V VI VII\";\nvar NAMES = ROMANS.split(\" \");\nvar NAMES_MINOR = ROMANS.toLowerCase().split(\" \");\nfunction parse(src) {\n  const [name, acc, roman, chordType] = tokenize(src);\n  if (!roman) {\n    return NoRomanNumeral;\n  }\n  const upperRoman = roman.toUpperCase();\n  const step = NAMES.indexOf(upperRoman);\n  const alt = accToAlt(acc);\n  const dir = 1;\n  return {\n    empty: false,\n    name,\n    roman,\n    interval: interval({ step, alt, dir }).name,\n    acc,\n    chordType,\n    alt,\n    step,\n    major: roman === upperRoman,\n    oct: 0,\n    dir\n  };\n}\nvar roman_numeral_default = {\n  names,\n  get,\n  romanNumeral\n};\nexport {\n  roman_numeral_default as default,\n  get,\n  names,\n  tokenize\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { accToAlt, altToAcc, note, transpose } from \"@tonaljs/core\";\nimport { transposeFifths } from \"@tonaljs/note\";\nimport { get as roman } from \"@tonaljs/roman-numeral\";\nvar Empty = Object.freeze([]);\nvar NoKey = {\n  type: \"major\",\n  tonic: \"\",\n  alteration: 0,\n  keySignature: \"\"\n};\nvar NoKeyScale = {\n  tonic: \"\",\n  grades: Empty,\n  intervals: Empty,\n  scale: Empty,\n  chords: Empty,\n  chordsHarmonicFunction: Empty,\n  chordScales: Empty\n};\nvar NoMajorKey = {\n  ...NoKey,\n  ...NoKeyScale,\n  type: \"major\",\n  minorRelative: \"\",\n  scale: Empty,\n  secondaryDominants: Empty,\n  secondaryDominantsMinorRelative: Empty,\n  substituteDominants: Empty,\n  substituteDominantsMinorRelative: Empty\n};\nvar NoMinorKey = {\n  ...NoKey,\n  type: \"minor\",\n  relativeMajor: \"\",\n  natural: NoKeyScale,\n  harmonic: NoKeyScale,\n  melodic: NoKeyScale\n};\nvar mapScaleToType = (scale, list, sep = \"\") => list.map((type, i) => `${scale[i]}${sep}${type}`);\nfunction keyScale(grades, chords, harmonicFunctions, chordScales) {\n  return (tonic) => {\n    const intervals = grades.map((gr) => roman(gr).interval || \"\");\n    const scale = intervals.map((interval) => transpose(tonic, interval));\n    return {\n      tonic,\n      grades,\n      intervals,\n      scale,\n      chords: mapScaleToType(scale, chords),\n      chordsHarmonicFunction: harmonicFunctions.slice(),\n      chordScales: mapScaleToType(scale, chordScales, \" \")\n    };\n  };\n}\nvar distInFifths = (from, to) => {\n  const f = note(from);\n  const t = note(to);\n  return f.empty || t.empty ? 0 : t.coord[0] - f.coord[0];\n};\nvar MajorScale = keyScale(\n  \"I II III IV V VI VII\".split(\" \"),\n  \"maj7 m7 m7 maj7 7 m7 m7b5\".split(\" \"),\n  \"T SD T SD D T D\".split(\" \"),\n  \"major,dorian,phrygian,lydian,mixolydian,minor,locrian\".split(\",\")\n);\nvar NaturalScale = keyScale(\n  \"I II bIII IV V bVI bVII\".split(\" \"),\n  \"m7 m7b5 maj7 m7 m7 maj7 7\".split(\" \"),\n  \"T SD T SD D SD SD\".split(\" \"),\n  \"minor,locrian,major,dorian,phrygian,lydian,mixolydian\".split(\",\")\n);\nvar HarmonicScale = keyScale(\n  \"I II bIII IV V bVI VII\".split(\" \"),\n  \"mMaj7 m7b5 +maj7 m7 7 maj7 o7\".split(\" \"),\n  \"T SD T SD D SD D\".split(\" \"),\n  \"harmonic minor,locrian 6,major augmented,lydian diminished,phrygian dominant,lydian #9,ultralocrian\".split(\n    \",\"\n  )\n);\nvar MelodicScale = keyScale(\n  \"I II bIII IV V VI VII\".split(\" \"),\n  \"m6 m7 +maj7 7 7 m7b5 m7b5\".split(\" \"),\n  \"T SD T SD D  \".split(\" \"),\n  \"melodic minor,dorian b2,lydian augmented,lydian dominant,mixolydian b6,locrian #2,altered\".split(\n    \",\"\n  )\n);\nfunction majorKey(tonic) {\n  const pc = note(tonic).pc;\n  if (!pc)\n    return NoMajorKey;\n  const keyScale2 = MajorScale(pc);\n  const alteration = distInFifths(\"C\", pc);\n  const romanInTonic = (src) => {\n    const r = roman(src);\n    if (r.empty)\n      return \"\";\n    return transpose(tonic, r.interval) + r.chordType;\n  };\n  return {\n    ...keyScale2,\n    type: \"major\",\n    minorRelative: transpose(pc, \"-3m\"),\n    alteration,\n    keySignature: altToAcc(alteration),\n    secondaryDominants: \"- VI7 VII7 I7 II7 III7 -\".split(\" \").map(romanInTonic),\n    secondaryDominantsMinorRelative: \"- IIIm7b5 IV#m7 Vm7 VIm7 VIIm7b5 -\".split(\" \").map(romanInTonic),\n    substituteDominants: \"- bIII7 IV7 bV7 bVI7 bVII7 -\".split(\" \").map(romanInTonic),\n    substituteDominantsMinorRelative: \"- IIIm7 Im7 IIbm7 VIm7 IVm7 -\".split(\" \").map(romanInTonic)\n  };\n}\nfunction minorKey(tnc) {\n  const pc = note(tnc).pc;\n  if (!pc)\n    return NoMinorKey;\n  const alteration = distInFifths(\"C\", pc) - 3;\n  return {\n    type: \"minor\",\n    tonic: pc,\n    relativeMajor: transpose(pc, \"3m\"),\n    alteration,\n    keySignature: altToAcc(alteration),\n    natural: NaturalScale(pc),\n    harmonic: HarmonicScale(pc),\n    melodic: MelodicScale(pc)\n  };\n}\nfunction majorTonicFromKeySignature(sig) {\n  if (typeof sig === \"number\") {\n    return transposeFifths(\"C\", sig);\n  } else if (typeof sig === \"string\" && /^b+|#+$/.test(sig)) {\n    return transposeFifths(\"C\", accToAlt(sig));\n  }\n  return null;\n}\nvar key_default = { majorKey, majorTonicFromKeySignature, minorKey };\nexport {\n  key_default as default,\n  majorKey,\n  majorTonicFromKeySignature,\n  minorKey\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { rotate } from \"@tonaljs/collection\";\nimport { deprecate, transpose } from \"@tonaljs/core\";\nimport { simplify, transposeFifths } from \"@tonaljs/interval\";\nimport { EmptyPcset } from \"@tonaljs/pcset\";\nimport { get as getType } from \"@tonaljs/scale-type\";\nvar MODES = [\n  [0, 2773, 0, \"ionian\", \"\", \"Maj7\", \"major\"],\n  [1, 2902, 2, \"dorian\", \"m\", \"m7\"],\n  [2, 3418, 4, \"phrygian\", \"m\", \"m7\"],\n  [3, 2741, -1, \"lydian\", \"\", \"Maj7\"],\n  [4, 2774, 1, \"mixolydian\", \"\", \"7\"],\n  [5, 2906, 3, \"aeolian\", \"m\", \"m7\", \"minor\"],\n  [6, 3434, 5, \"locrian\", \"dim\", \"m7b5\"]\n];\nvar NoMode = {\n  ...EmptyPcset,\n  name: \"\",\n  alt: 0,\n  modeNum: NaN,\n  triad: \"\",\n  seventh: \"\",\n  aliases: []\n};\nvar modes = MODES.map(toMode);\nvar index = {};\nmodes.forEach((mode2) => {\n  index[mode2.name] = mode2;\n  mode2.aliases.forEach((alias) => {\n    index[alias] = mode2;\n  });\n});\nfunction get(name) {\n  return typeof name === \"string\" ? index[name.toLowerCase()] || NoMode : name && name.name ? get(name.name) : NoMode;\n}\nvar mode = deprecate(\"Mode.mode\", \"Mode.get\", get);\nfunction all() {\n  return modes.slice();\n}\nvar entries = deprecate(\"Mode.mode\", \"Mode.all\", all);\nfunction names() {\n  return modes.map((mode2) => mode2.name);\n}\nfunction toMode(mode2) {\n  const [modeNum, setNum, alt, name, triad, seventh, alias] = mode2;\n  const aliases = alias ? [alias] : [];\n  const chroma = Number(setNum).toString(2);\n  const intervals = getType(name).intervals;\n  return {\n    empty: false,\n    intervals,\n    modeNum,\n    chroma,\n    normalized: chroma,\n    name,\n    setNum,\n    alt,\n    triad,\n    seventh,\n    aliases\n  };\n}\nfunction notes(modeName, tonic) {\n  return get(modeName).intervals.map((ivl) => transpose(tonic, ivl));\n}\nfunction chords(chords2) {\n  return (modeName, tonic) => {\n    const mode2 = get(modeName);\n    if (mode2.empty)\n      return [];\n    const triads2 = rotate(mode2.modeNum, chords2);\n    const tonics = mode2.intervals.map((i) => transpose(tonic, i));\n    return triads2.map((triad, i) => tonics[i] + triad);\n  };\n}\nvar triads = chords(MODES.map((x) => x[4]));\nvar seventhChords = chords(MODES.map((x) => x[5]));\nfunction distance(destination, source) {\n  const from = get(source);\n  const to = get(destination);\n  if (from.empty || to.empty)\n    return \"\";\n  return simplify(transposeFifths(\"1P\", to.alt - from.alt));\n}\nfunction relativeTonic(destination, source, tonic) {\n  return transpose(tonic, distance(destination, source));\n}\nvar mode_default = {\n  get,\n  names,\n  all,\n  distance,\n  relativeTonic,\n  notes,\n  triads,\n  seventhChords,\n  entries,\n  mode\n};\nexport {\n  all,\n  mode_default as default,\n  distance,\n  entries,\n  get,\n  mode,\n  names,\n  notes,\n  relativeTonic,\n  seventhChords,\n  triads\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { tokenize } from \"@tonaljs/chord\";\nimport { distance, interval, transpose } from \"@tonaljs/core\";\nimport { get as romanNumeral } from \"@tonaljs/roman-numeral\";\nfunction fromRomanNumerals(tonic, chords) {\n  const romanNumerals = chords.map(romanNumeral);\n  return romanNumerals.map(\n    (rn) => transpose(tonic, interval(rn)) + rn.chordType\n  );\n}\nfunction toRomanNumerals(tonic, chords) {\n  return chords.map((chord) => {\n    const [note, chordType] = tokenize(chord);\n    const intervalName = distance(tonic, note);\n    const roman = romanNumeral(interval(intervalName));\n    return roman.name + chordType;\n  });\n}\nvar progression_default = { fromRomanNumerals, toRomanNumerals };\nexport {\n  progression_default as default,\n  fromRomanNumerals,\n  toRomanNumerals\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { compact, range } from \"@tonaljs/collection\";\nimport { midiToNoteName, toMidi } from \"@tonaljs/midi\";\nfunction numeric(notes) {\n  const midi = compact(notes.map(toMidi));\n  if (!notes.length || midi.length !== notes.length) {\n    return [];\n  }\n  return midi.reduce(\n    (result, note) => {\n      const last = result[result.length - 1];\n      return result.concat(range(last, note).slice(1));\n    },\n    [midi[0]]\n  );\n}\nfunction chromatic(notes, options) {\n  return numeric(notes).map((midi) => midiToNoteName(midi, options));\n}\nvar range_default = { numeric, chromatic };\nexport {\n  chromatic,\n  range_default as default,\n  numeric\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { all as chordTypes } from \"@tonaljs/chord-type\";\nimport { rotate, range as nums } from \"@tonaljs/collection\";\nimport { deprecate, note, transpose } from \"@tonaljs/core\";\nimport { sortedUniqNames, fromMidi, enharmonic } from \"@tonaljs/note\";\nimport { isSubsetOf, isSupersetOf, modes } from \"@tonaljs/pcset\";\nimport {\n  all as scaleTypes,\n  get as getScaleType,\n  names as scaleTypeNames\n} from \"@tonaljs/scale-type\";\nvar NoScale = {\n  empty: true,\n  name: \"\",\n  type: \"\",\n  tonic: null,\n  setNum: NaN,\n  chroma: \"\",\n  normalized: \"\",\n  aliases: [],\n  notes: [],\n  intervals: []\n};\nfunction tokenize(name) {\n  if (typeof name !== \"string\") {\n    return [\"\", \"\"];\n  }\n  const i = name.indexOf(\" \");\n  const tonic = note(name.substring(0, i));\n  if (tonic.empty) {\n    const n = note(name);\n    return n.empty ? [\"\", name] : [n.name, \"\"];\n  }\n  const type = name.substring(tonic.name.length + 1);\n  return [tonic.name, type.length ? type : \"\"];\n}\nvar names = scaleTypeNames;\nfunction get(src) {\n  const tokens = Array.isArray(src) ? src : tokenize(src);\n  const tonic = note(tokens[0]).name;\n  const st = getScaleType(tokens[1]);\n  if (st.empty) {\n    return NoScale;\n  }\n  const type = st.name;\n  const notes = tonic ? st.intervals.map((i) => transpose(tonic, i)) : [];\n  const name = tonic ? tonic + \" \" + type : type;\n  return { ...st, name, type, tonic, notes };\n}\nvar scale = deprecate(\"Scale.scale\", \"Scale.get\", get);\nfunction scaleChords(name) {\n  const s = get(name);\n  const inScale = isSubsetOf(s.chroma);\n  return chordTypes().filter((chord) => inScale(chord.chroma)).map((chord) => chord.aliases[0]);\n}\nfunction extended(name) {\n  const s = get(name);\n  const isSuperset = isSupersetOf(s.chroma);\n  return scaleTypes().filter((scale2) => isSuperset(scale2.chroma)).map((scale2) => scale2.name);\n}\nfunction reduced(name) {\n  const isSubset = isSubsetOf(get(name).chroma);\n  return scaleTypes().filter((scale2) => isSubset(scale2.chroma)).map((scale2) => scale2.name);\n}\nfunction scaleNotes(notes) {\n  const pcset = notes.map((n) => note(n).pc).filter((x) => x);\n  const tonic = pcset[0];\n  const scale2 = sortedUniqNames(pcset);\n  return rotate(scale2.indexOf(tonic), scale2);\n}\nfunction modeNames(name) {\n  const s = get(name);\n  if (s.empty) {\n    return [];\n  }\n  const tonics = s.tonic ? s.notes : s.intervals;\n  return modes(s.chroma).map((chroma, i) => {\n    const modeName = get(chroma).name;\n    return modeName ? [tonics[i], modeName] : [\"\", \"\"];\n  }).filter((x) => x[0]);\n}\nfunction getNoteNameOf(scale2) {\n  const names2 = Array.isArray(scale2) ? scaleNotes(scale2) : get(scale2).notes;\n  const chromas = names2.map((name) => note(name).chroma);\n  return (noteOrMidi) => {\n    const currNote = typeof noteOrMidi === \"number\" ? note(fromMidi(noteOrMidi)) : note(noteOrMidi);\n    const height = currNote.height;\n    if (height === void 0)\n      return void 0;\n    const chroma = height % 12;\n    const position = chromas.indexOf(chroma);\n    if (position === -1)\n      return void 0;\n    return enharmonic(currNote.name, names2[position]);\n  };\n}\nfunction rangeOf(scale2) {\n  const getName = getNoteNameOf(scale2);\n  return (fromNote, toNote) => {\n    const from = note(fromNote).height;\n    const to = note(toNote).height;\n    if (from === void 0 || to === void 0)\n      return [];\n    return nums(from, to).map(getName).filter((x) => x);\n  };\n}\nvar scale_default = {\n  get,\n  names,\n  extended,\n  modeNames,\n  reduced,\n  scaleChords,\n  scaleNotes,\n  tokenize,\n  rangeOf,\n  scale\n};\nexport {\n  scale_default as default,\n  extended,\n  get,\n  modeNames,\n  names,\n  rangeOf,\n  reduced,\n  scale,\n  scaleChords,\n  scaleNotes,\n  tokenize\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nvar NONE = {\n  empty: true,\n  name: \"\",\n  upper: void 0,\n  lower: void 0,\n  type: void 0,\n  additive: []\n};\nvar NAMES = [\"4/4\", \"3/4\", \"2/4\", \"2/2\", \"12/8\", \"9/8\", \"6/8\", \"3/8\"];\nfunction names() {\n  return NAMES.slice();\n}\nvar REGEX = /^(\\d?\\d(?:\\+\\d)*)\\/(\\d)$/;\nvar CACHE = /* @__PURE__ */ new Map();\nfunction get(literal) {\n  const stringifiedLiteral = JSON.stringify(literal);\n  const cached = CACHE.get(stringifiedLiteral);\n  if (cached) {\n    return cached;\n  }\n  const ts = build(parse(literal));\n  CACHE.set(stringifiedLiteral, ts);\n  return ts;\n}\nfunction parse(literal) {\n  if (typeof literal === \"string\") {\n    const [_, up2, low] = REGEX.exec(literal) || [];\n    return parse([up2, low]);\n  }\n  const [up, down] = literal;\n  const denominator = +down;\n  if (typeof up === \"number\") {\n    return [up, denominator];\n  }\n  const list = up.split(\"+\").map((n) => +n);\n  return list.length === 1 ? [list[0], denominator] : [list, denominator];\n}\nvar time_signature_default = { names, parse, get };\nfunction build([up, down]) {\n  const upper = Array.isArray(up) ? up.reduce((a, b) => a + b, 0) : up;\n  const lower = down;\n  if (upper === 0 || lower === 0) {\n    return NONE;\n  }\n  const name = Array.isArray(up) ? `${up.join(\"+\")}/${down}` : `${up}/${down}`;\n  const additive = Array.isArray(up) ? up : [];\n  const type = lower === 4 || lower === 2 ? \"simple\" : lower === 8 && upper % 3 === 0 ? \"compound\" : \"irregular\";\n  return {\n    empty: false,\n    name,\n    type,\n    upper,\n    lower,\n    additive\n  };\n}\nexport {\n  time_signature_default as default,\n  get,\n  names,\n  parse\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport AbcNotation from \"@tonaljs/abc-notation\";\nimport * as Array from \"@tonaljs/array\";\nimport Chord from \"@tonaljs/chord\";\nimport ChordType from \"@tonaljs/chord-type\";\nimport Collection from \"@tonaljs/collection\";\nimport * as Core from \"@tonaljs/core\";\nimport DurationValue from \"@tonaljs/duration-value\";\nimport Interval from \"@tonaljs/interval\";\nimport Key from \"@tonaljs/key\";\nimport Midi from \"@tonaljs/midi\";\nimport Mode from \"@tonaljs/mode\";\nimport Note from \"@tonaljs/note\";\nimport Pcset from \"@tonaljs/pcset\";\nimport Progression from \"@tonaljs/progression\";\nimport Range from \"@tonaljs/range\";\nimport RomanNumeral from \"@tonaljs/roman-numeral\";\nimport Scale from \"@tonaljs/scale\";\nimport ScaleType from \"@tonaljs/scale-type\";\nimport TimeSignature from \"@tonaljs/time-signature\";\nexport * from \"@tonaljs/core\";\nvar Tonal = Core;\nvar PcSet = Pcset;\nvar ChordDictionary = ChordType;\nvar ScaleDictionary = ScaleType;\nexport {\n  AbcNotation,\n  Array,\n  Chord,\n  ChordDictionary,\n  ChordType,\n  Collection,\n  Core,\n  DurationValue,\n  Interval,\n  Key,\n  Midi,\n  Mode,\n  Note,\n  PcSet,\n  Pcset,\n  Progression,\n  Range,\n  RomanNumeral,\n  Scale,\n  ScaleDictionary,\n  ScaleType,\n  TimeSignature,\n  Tonal\n};\n//# sourceMappingURL=index.mjs.map","/*\ntonal.mjs - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/tonal/tonal.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Note, Interval, Scale } from '@tonaljs/tonal';\nimport { register, _mod } from '@strudel.cycles/core';\n\n// transpose note inside scale by offset steps\n// function scaleOffset(scale: string, offset: number, note: string) {\nfunction scaleOffset(scale, offset, note) {\n  let [tonic, scaleName] = Scale.tokenize(scale);\n  let { notes } = Scale.get(`${tonic} ${scaleName}`);\n  notes = notes.map((note) => Note.get(note).pc); // use only pc!\n  offset = Number(offset);\n  if (isNaN(offset)) {\n    throw new Error(`scale offset \"${offset}\" not a number`);\n  }\n  const { pc: fromPc, oct = 3 } = Note.get(note);\n  const noteIndex = notes.indexOf(fromPc);\n  if (noteIndex === -1) {\n    throw new Error(`note \"${note}\" is not in scale \"${scale}\"`);\n  }\n  let i = noteIndex,\n    o = oct,\n    n = fromPc;\n  const direction = Math.sign(offset);\n  // TODO: find way to do this smarter\n  while (Math.abs(i - noteIndex) < Math.abs(offset)) {\n    i += direction;\n    const index = _mod(i, notes.length);\n    if (direction < 0 && n[0] === 'C') {\n      o += direction;\n    }\n    n = notes[index];\n    if (direction > 0 && n[0] === 'C') {\n      o += direction;\n    }\n  }\n  return n + o;\n}\n\n// Pattern.prototype._transpose = function (intervalOrSemitones: string | number) {\n/**\n * Change the pitch of each value by the given amount. Expects numbers or note strings as values.\n * The amount can be given as a number of semitones or as a string in interval short notation.\n * If you don't care about enharmonic correctness, just use numbers. Otherwise, pass the interval of\n * the form: ST where S is the degree number and T the type of interval with\n *\n * - M = major\n * - m = minor\n * - P = perfect\n * - A = augmented\n * - d = diminished\n *\n * Examples intervals:\n *\n * - 1P = unison\n * - 3M = major third\n * - 3m = minor third\n * - 4P = perfect fourth\n * - 4A = augmented fourth\n * - 5P = perfect fifth\n * - 5d = diminished fifth\n *\n * @param {string | number} amount Either number of semitones or interval string.\n * @returns Pattern\n * @memberof Pattern\n * @name transpose\n * @example\n * \"c2 c3\".fast(2).transpose(\"<0 -2 5 3>\".slow(2)).note()\n * @example\n * \"c2 c3\".fast(2).transpose(\"<1P -2M 4P 3m>\".slow(2)).note()\n */\n\nexport const transpose = register('transpose', function (intervalOrSemitones, pat) {\n  return pat.withHap((hap) => {\n    const interval = !isNaN(Number(intervalOrSemitones))\n      ? Interval.fromSemitones(intervalOrSemitones /*  as number */)\n      : String(intervalOrSemitones);\n    if (typeof hap.value === 'number') {\n      const semitones = typeof interval === 'string' ? Interval.semitones(interval) || 0 : interval;\n      return hap.withValue(() => hap.value + semitones);\n    }\n    // TODO: move simplify to player to preserve enharmonics\n    // tone.js doesn't understand multiple sharps flats e.g. F##3 has to be turned into G3\n    return hap.withValue(() => Note.simplify(Note.transpose(hap.value, interval)));\n  });\n});\n\n// example: transpose(3).late(0.2) will be equivalent to compose(transpose(3), late(0.2))\n// e.g. `stack(c3).superimpose(transpose(slowcat(7, 5)))` or\n// or even `stack(c3).superimpose(transpose.slowcat(7, 5))` or\n\n/**\n * Transposes notes inside the scale by the number of steps.\n * Expected to be called on a Pattern which already has a {@link Pattern#scale}\n *\n * @memberof Pattern\n * @name scaleTranspose\n * @param {offset} offset number of steps inside the scale\n * @returns Pattern\n * @example\n * \"-8 [2,4,6]\"\n * .scale('C4 bebop major')\n * .scaleTranspose(\"<0 -1 -2 -3 -4 -5 -6 -4>\")\n * .note()\n */\n\nexport const scaleTranspose = register('scaleTranspose', function (offset /* : number | string */, pat) {\n  return pat.withHap((hap) => {\n    if (!hap.context.scale) {\n      throw new Error('can only use scaleTranspose after .scale');\n    }\n    if (typeof hap.value !== 'string') {\n      throw new Error('can only use scaleTranspose with notes');\n    }\n    return hap.withValue(() => scaleOffset(hap.context.scale, Number(offset), hap.value));\n  });\n});\n\n/**\n * Turns numbers into notes in the scale (zero indexed). Also sets scale for other scale operations, like {@link Pattern#scaleTranspose}.\n *\n * The scale name has the form \"TO? N\" wher\n *\n * - T = Tonic\n * - O = Octave (optional, defaults to 3)\n * - N = Name of scale, available names can be found [here](https://github.com/tonaljs/tonal/blob/main/packages/scale-type/data.ts).\n *\n * @memberof Pattern\n * @name scale\n * @param {string} scale Name of scale\n * @returns Pattern\n * @example\n * \"0 2 4 6 4 2\"\n * .scale(seq('C2 major', 'C2 minor').slow(2))\n * .note()\n */\n\nexport const scale = register('scale', function (scale /* : string */, pat) {\n  return pat.withHap((hap) => {\n    let note = hap.value;\n    const asNumber = Number(note);\n    if (!isNaN(asNumber)) {\n      let [tonic, scaleName] = Scale.tokenize(scale);\n      const { pc, oct = 3 } = Note.get(tonic);\n      note = scaleOffset(pc + ' ' + scaleName, asNumber, pc + oct);\n    }\n    return hap.withValue(() => note).setContext({ ...hap.context, scale });\n  });\n});\n","\"use strict\";\nexports.__esModule = true;\nexports.getBestVoicing = void 0;\nfunction getBestVoicing(voicingOptions) {\n    var chord = voicingOptions.chord, range = voicingOptions.range, finder = voicingOptions.finder, picker = voicingOptions.picker, lastVoicing = voicingOptions.lastVoicing;\n    var voicings = finder(chord, range);\n    if (!voicings.length) {\n        return [];\n    }\n    return picker(voicings, lastVoicing);\n}\nexports.getBestVoicing = getBestVoicing;\n//# sourceMappingURL=getBestVoicing.js.map","\"use strict\";\nexports.__esModule = true;\nexports.tokenizeChord = void 0;\nfunction tokenizeChord(chord) {\n    var match = (chord || '').match(/^([A-G][b#]*)([^\\/]*)[\\/]?([A-G][b#]*)?$/);\n    if (!match) {\n        // console.warn('could not tokenize chord', chord);\n        return [];\n    }\n    return match.slice(1);\n}\nexports.tokenizeChord = tokenizeChord;\n//# sourceMappingURL=tokenizeChord.js.map","\"use strict\";\nexports.__esModule = true;\nexports.voicingsInRange = void 0;\nvar tonal_1 = require(\"@tonaljs/tonal\");\nvar dictionaryVoicing_1 = require(\"./dictionaryVoicing\");\nvar tokenizeChord_1 = require(\"./tokenizeChord\");\nfunction voicingsInRange(chord, dictionary, range) {\n    if (dictionary === void 0) { dictionary = dictionaryVoicing_1.lefthand; }\n    if (range === void 0) { range = ['D3', 'A4']; }\n    var _a = (0, tokenizeChord_1.tokenizeChord)(chord), tonic = _a[0], symbol = _a[1];\n    if (!dictionary[symbol]) {\n        return [];\n    }\n    // resolve array of interval arrays for the wanted symbol\n    var voicings = dictionary[symbol].map(function (intervals) { return intervals.split(' '); });\n    var notesInRange = tonal_1.Range.chromatic(range); // gives array of notes inside range\n    return voicings.reduce(function (voiced, voicing) {\n        // transpose intervals relative to first interval (e.g. 3m 5P > 1P 3M)\n        var relativeIntervals = voicing.map(function (interval) { return tonal_1.Interval.substract(interval, voicing[0]); });\n        // get enharmonic correct pitch class the bottom note\n        var bottomPitchClass = tonal_1.Note.transpose(tonic, voicing[0]);\n        // get all possible start notes for voicing\n        var starts = notesInRange\n            // only get the start notes:\n            .filter(function (note) { return tonal_1.Note.chroma(note) === tonal_1.Note.chroma(bottomPitchClass); })\n            // filter out start notes that will overshoot the top end of the range\n            .filter(function (note) {\n            return tonal_1.Note.midi(tonal_1.Note.transpose(note, relativeIntervals[relativeIntervals.length - 1])) <= tonal_1.Note.midi(range[1]);\n        })\n            // replace Range.chromatic notes with the correct enharmonic equivalents\n            .map(function (note) { return tonal_1.Note.enharmonic(note, bottomPitchClass); });\n        // render one voicing for each start note\n        var notes = starts.map(function (start) { return relativeIntervals.map(function (interval) { return tonal_1.Note.transpose(start, interval); }); });\n        return voiced.concat(notes);\n    }, []);\n}\nexports.voicingsInRange = voicingsInRange;\n//# sourceMappingURL=voicingsInRange.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nexports.__esModule = true;\nexports.dictionaryVoicing = exports.dictionaryVoicingFinder = exports.triads = exports.guidetones = exports.lefthand = void 0;\nvar getBestVoicing_1 = require(\"./getBestVoicing\");\nvar voicingsInRange_1 = require(\"./voicingsInRange\");\nexports.lefthand = {\n    m7: ['3m 5P 7m 9M', '7m 9M 10m 12P'],\n    '7': ['3M 6M 7m 9M', '7m 9M 10M 13M'],\n    '^7': ['3M 5P 7M 9M', '7M 9M 10M 12P'],\n    '69': ['3M 5P 6A 9M'],\n    m7b5: ['3m 5d 7m 8P', '7m 8P 10m 12d'],\n    '7b9': ['3M 6m 7m 9m', '7m 9m 10M 13m'],\n    '7b13': ['3M 6m 7m 9m', '7m 9m 10M 13m'],\n    o7: ['1P 3m 5d 6M', '5d 6M 8P 10m'],\n    '7#11': ['7m 9M 11A 13A'],\n    '7#9': ['3M 7m 9A'],\n    mM7: ['3m 5P 7M 9M', '7M 9M 10m 12P'],\n    m6: ['3m 5P 6M 9M', '6M 9M 10m 12P']\n};\nexports.guidetones = {\n    m7: ['3m 7m', '7m 10m'],\n    m9: ['3m 7m', '7m 10m'],\n    '7': ['3M 7m', '7m 10M'],\n    '^7': ['3M 7M', '7M 10M'],\n    '^9': ['3M 7M', '7M 10M'],\n    '69': ['3M 6M'],\n    '6': ['3M 6M', '6M 10M'],\n    m7b5: ['3m 7m', '7m 10m'],\n    '7b9': ['3M 7m', '7m 10M'],\n    '7b13': ['3M 7m', '7m 10M'],\n    o7: ['3m 6M', '6M 10m'],\n    '7#11': ['3M 7m', '7m 10M'],\n    '7#9': ['3M 7m', '7m 10M'],\n    mM7: ['3m 7M', '7M 10m'],\n    m6: ['3m 6M', '6M 10m']\n};\nexports.triads = {\n    M: ['1P 3M 5P', '3M 5P 8P', '5P 8P 10M'],\n    m: ['1P 3m 5P', '3m 5P 8P', '5P 8P 10m'],\n    o: ['1P 3m 5d', '3m 5d 8P', '5d 8P 10m'],\n    aug: ['1P 3m 5A', '3m 5A 8P', '5A 8P 10m']\n};\nvar dictionaryVoicingFinder = function (dictionary) { return function (chordSymbol, range) {\n    return (0, voicingsInRange_1.voicingsInRange)(chordSymbol, dictionary, range);\n}; };\nexports.dictionaryVoicingFinder = dictionaryVoicingFinder;\nvar dictionaryVoicing = function (props) {\n    var dictionary = props.dictionary, range = props.range, rest = __rest(props, [\"dictionary\", \"range\"]);\n    return (0, getBestVoicing_1.getBestVoicing)(__assign(__assign({}, rest), { range: range, finder: (0, exports.dictionaryVoicingFinder)(dictionary) }));\n};\nexports.dictionaryVoicing = dictionaryVoicing;\n//# sourceMappingURL=dictionaryVoicing.js.map","\"use strict\";\nexports.__esModule = true;\nexports.minTopNoteDiff = void 0;\nvar tonal_1 = require(\"@tonaljs/tonal\");\nfunction minTopNoteDiff(voicings, lastVoicing) {\n    if (!lastVoicing) {\n        return voicings[0];\n    }\n    var diff = function (voicing) {\n        return Math.abs(tonal_1.Note.midi(lastVoicing[lastVoicing.length - 1]) - tonal_1.Note.midi(voicing[voicing.length - 1]));\n    };\n    return voicings.reduce(function (best, current) { return (diff(current) < diff(best) ? current : best); }, voicings[0]);\n}\nexports.minTopNoteDiff = minTopNoteDiff;\n//# sourceMappingURL=minTopNoteDiff.js.map","\"use strict\";\nexports.__esModule = true;\nvar dictionaryVoicing_1 = require(\"./dictionaryVoicing\");\nvar minTopNoteDiff_1 = require(\"./minTopNoteDiff\");\nvar getBestVoicing_1 = require(\"./getBestVoicing\");\nvar tokenizeChord_1 = require(\"./tokenizeChord\");\nexports[\"default\"] = {\n    tokenizeChord: tokenizeChord_1.tokenizeChord,\n    getBestVoicing: getBestVoicing_1.getBestVoicing,\n    dictionaryVoicing: dictionaryVoicing_1.dictionaryVoicing,\n    dictionaryVoicingFinder: dictionaryVoicing_1.dictionaryVoicingFinder,\n    lefthand: dictionaryVoicing_1.lefthand,\n    guidetones: dictionaryVoicing_1.guidetones,\n    triads: dictionaryVoicing_1.triads,\n    minTopNoteDiff: minTopNoteDiff_1.minTopNoteDiff\n};\n//# sourceMappingURL=index.js.map","/*\nvoicings.mjs - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/tonal/voicings.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { stack, register } from '@strudel.cycles/core';\nimport _voicings from 'chord-voicings';\nconst { dictionaryVoicing, minTopNoteDiff, lefthand } = _voicings.default || _voicings; // parcel module resolution fuckup\n\nexport const voicingRegistry = {\n  lefthand: { dictionary: lefthand, range: ['F3', 'A4'] },\n};\nexport const setVoicingRange = (name, range) => addVoicings(name, voicingRegistry[name].dictionary, range);\n\n/**\n * Adds a new custom voicing dictionary.\n *\n * @name addVoicings\n * @memberof Pattern\n * @param {string} name identifier for the voicing dictionary\n * @param {Object} dictionary maps chord symbol to possible voicings\n * @param {Array} range min, max note\n * @returns Pattern\n * @example\n * addVoicings('cookie', {\n *   7: ['3M 7m 9M 12P 15P', '7m 10M 13M 16M 19P'],\n *   '^7': ['3M 6M 9M 12P 14M', '7M 10M 13M 16M 19P'],\n *   m7: ['8P 11P 14m 17m 19P', '5P 8P 11P 14m 17m'],\n *   m7b5: ['3m 5d 8P 11P 14m', '5d 8P 11P 14m 17m'],\n *   o7: ['3m 6M 9M 11A 15P'],\n *   '7alt': ['3M 7m 10m 13m 15P'],\n *   '7#11': ['7m 10m 13m 15P 17m'],\n * }, ['C3', 'C6'])\n * \"<C^7 A7 Dm7 G7>\".voicings('cookie').note()\n */\nexport const addVoicings = (name, dictionary, range = ['F3', 'A4']) => {\n  Object.assign(voicingRegistry, { [name]: { dictionary, range } });\n};\n\nconst getVoicing = (chord, dictionaryName, lastVoicing) => {\n  const { dictionary, range } = voicingRegistry[dictionaryName];\n  return dictionaryVoicing({\n    chord,\n    dictionary,\n    range,\n    picker: minTopNoteDiff,\n    lastVoicing,\n  });\n};\n\n/**\n * Turns chord symbols into voicings, using the smoothest voice leading possible.\n * Uses [chord-voicings package](https://github.com/felixroos/chord-voicings#chord-voicings).\n *\n * @name voicings\n * @memberof Pattern\n * @param {string} dictionary which voicing dictionary to use.\n * @returns Pattern\n * @example\n * stack(\"<C^7 A7 Dm7 G7>\".voicings('lefthand'), \"<C3 A2 D3 G2>\").note()\n */\n\nlet lastVoicing; // this now has to be global until another solution is found :-/\n// it used to be local to the voicings function at evaluation time\n// but since register will patternify by default, means that\n// the function is called over and over again, resetting the lastVoicing variables\nexport const voicings = register('voicings', function (dictionary, pat) {\n  return pat\n    .fmap((value) => {\n      lastVoicing = getVoicing(value, dictionary, lastVoicing);\n      return stack(...lastVoicing);\n    })\n    .outerJoin();\n});\n\n/**\n * Maps the chords of the incoming pattern to root notes in the given octave.\n *\n * @name rootNotes\n * @memberof Pattern\n * @param {octave} octave octave to use\n * @returns Pattern\n * @example\n * \"<C^7 A7 Dm7 G7>\".rootNotes(2).note()\n */\nexport const rootNotes = register('rootNotes', function (octave, pat) {\n  return pat.fmap((value) => {\n    const root = value.match(/^([a-gA-G][b#]?).*$/)[1];\n    return root + octave;\n  });\n});\n"],"names":["fillStr","s","n","deprecate","original","alternative","fn","args","isNamed","src","isPitch","pitch","FIFTHS","STEPS_TO_OCTS","fifths","encode","step","alt","oct","dir","f","o","FIFTHS_TO_STEPS","decode","coord","unaltered","i","NoNote","cache","stepToLetter","altToAcc","accToAlt","acc","note","stringSrc","cached","value","parse","pitchName","REGEX","tokenizeNote","str","m","coordToNote","noteCoord","mod","SEMI","noteName","tokens","letter","octStr","name","pc","chroma","height","midi","freq","props","NoInterval","INTERVAL_TONAL_REGEX","INTERVAL_SHORTHAND_REGEX","REGEX2","tokenizeInterval","cache2","interval","parse2","pitchName2","SIZES","TYPES","num","q","t","type","simple","qToAlt","semitones","coordToInterval","forceDescending","isDescending","ivl","calcNum","d","altToQ","transpose","intervalName","note2","interval2","intervalCoord","tr","distance","fromNote","toNote","from","to","fcoord","tcoord","octs","character","times","tokenize","abcToScientificNotation","scientificToAbcNotation","l","dist","abc_notation_default","ascR","b","a","descR","range","rotate","arr","len","compact","sortedNoteNames","notes","sortedUniqNoteNames","shuffle","rnd","permutations","perm","e","pos","newPerm","collection_default","EmptyPcset","setNumToChroma","num2","chromaToNumber","chroma2","isChroma","set","isPcsetNum","isPcset","get","listToChroma","chromaToPcset","pcset","intervals","IVLS","chromaToIntervals","intervals2","chromas","modes","normalize","binary","_","r","isEqual","s1","s2","isSubsetOf","isSupersetOf","isNoteIncludedIn","filter","isIncluded","pcset_default","chromaRotations","setNum","normalizedNum","normalized","CHORDS","data_default","NoChordType","dictionary","index","chordType","names","chord","x","symbols","keys","all","entries","removeAll","add","aliases","fullName","quality","getQuality","alias","addAlias","has","ivls","names2","chord_type_default","namedSet","pcToName","record","detect","source","findExactMatches","weight","tonic","tonicChroma","allModes","found","mode","chordName","baseNote","SCALES","NoScaleType","scale","scaleType","scale_type_default","NoChord","NUM_TYPES","getChord","chord2","typeName","optionalTonic","optionalRoot","getChordType","root","rootInterval","rootDegree","newNum","transposeNote","symbol","chordScales","isChordIncluded","scaleTypes","extended","isSuperset","chordTypes","reduced","isSubset","chord_default","DATA","VALUES","denominator","shorthand","NoDuration","duration","shorthands","dur","dots","base","fraction2","calcDots","value2","fraction","duration_value_default","pow","numerator","name2","simplify","invert","IN","IQ","fromSemitones","semitones2","c","combinator","addTo","other","substract","transposeFifths","nFifths","nOcts","interval_default","coordA","coordB","isMidi","arg","toMidi","midiToFreq","tuning","L2","L440","freqToMidi","v","SHARPS","FLATS","midiToNoteName","options","midi_default","NAMES","toName","onlyNotes","array","pitchClass","accidentals","octave","fromMidi","midi2","fromFreq","freq2","fromFreqSharps","fromMidiSharps","_tr","transposeBy","trBy","transposeFrom","trFrom","trFifths","ascending","descending","sortedNames","comparator","sortedUniqNames","enharmonic","destName","dest","srcChroma","destChroma","destOctOffset","destOct","note_default","NoRomanNumeral","fromPitch","romanNumeral","major","NAMES_MINOR","ROMANS","roman","upperRoman","roman_numeral_default","Empty","NoKey","NoKeyScale","NoMajorKey","NoMinorKey","mapScaleToType","list","sep","keyScale","grades","chords","harmonicFunctions","gr","distInFifths","MajorScale","NaturalScale","HarmonicScale","MelodicScale","majorKey","keyScale2","alteration","romanInTonic","minorKey","tnc","majorTonicFromKeySignature","sig","key_default","MODES","NoMode","toMode","mode2","modeNum","triad","seventh","getType","modeName","chords2","triads2","tonics","triads","seventhChords","destination","relativeTonic","mode_default","fromRomanNumerals","rn","toRomanNumerals","progression_default","numeric","result","last","chromatic","range_default","NoScale","scaleTypeNames","st","getScaleType","scaleChords","inScale","scale2","scaleNotes","modeNames","getNoteNameOf","noteOrMidi","currNote","position","rangeOf","getName","nums","scale_default","NONE","CACHE","literal","stringifiedLiteral","ts","build","up2","low","up","down","time_signature_default","upper","lower","additive","Tonal","Core","PcSet","Pcset","ChordDictionary","ChordType","ScaleDictionary","ScaleType","scaleOffset","offset","scaleName","Scale","Note","fromPc","noteIndex","direction","_mod","register","intervalOrSemitones","pat","hap","Interval","scaleTranspose","asNumber","getBestVoicing_1","getBestVoicing","voicingOptions","finder","picker","lastVoicing","voicings","tokenizeChord_1","tokenizeChord","match","voicingsInRange_1","tonal_1","require$$0","dictionaryVoicing_1","require$$1","require$$2","voicingsInRange","_a","notesInRange","voiced","voicing","relativeIntervals","bottomPitchClass","starts","start","__assign","this","p","__rest","exports","dictionaryVoicingFinder","chordSymbol","dictionaryVoicing","rest","minTopNoteDiff_1","minTopNoteDiff","diff","best","current","require$$3","lefthand","_voicings","voicingRegistry","setVoicingRange","addVoicings","getVoicing","dictionaryName","stack","rootNotes"],"mappings":"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"}