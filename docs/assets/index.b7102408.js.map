{"version":3,"file":"index.b7102408.js","sources":["../../packages/mini/krill-parser.js","../../packages/mini/mini.mjs"],"sourcesContent":["// Generated by Peggy 2.0.1.\n//\n// https://peggyjs.org/\n\nfunction peg$subclass(child, parent) {\n  function C() { this.constructor = child; }\n  C.prototype = parent.prototype;\n  child.prototype = new C();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  var self = Error.call(this, message);\n  // istanbul ignore next Check is a necessary evil to support older environments\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(self, peg$SyntaxError.prototype);\n  }\n  self.expected = expected;\n  self.found = found;\n  self.location = location;\n  self.name = \"SyntaxError\";\n  return self;\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\nfunction peg$padEnd(str, targetLength, padString) {\n  padString = padString || \" \";\n  if (str.length > targetLength) { return str; }\n  targetLength -= str.length;\n  padString += padString.repeat(targetLength);\n  return str + padString.slice(0, targetLength);\n}\n\npeg$SyntaxError.prototype.format = function(sources) {\n  var str = \"peg error: \" + this.message;\n  if (this.location) {\n    var src = null;\n    var k;\n    for (k = 0; k < sources.length; k++) {\n      if (sources[k].source === this.location.source) {\n        src = sources[k].text.split(/\\r\\n|\\n|\\r/g);\n        break;\n      }\n    }\n    var s = this.location.start;\n    var loc = this.location.source + \":\" + s.line + \":\" + s.column;\n    if (src) {\n      var e = this.location.end;\n      var filler = peg$padEnd(\"\", s.line.toString().length, ' ');\n      var line = src[s.line - 1];\n      var last = s.line === e.line ? e.column : line.length + 1;\n      var hatLen = (last - s.column) || 1;\n      str += \"\\n --> \" + loc + \"\\n\"\n          + filler + \" |\\n\"\n          + s.line + \" | \" + line + \"\\n\"\n          + filler + \" | \" + peg$padEnd(\"\", s.column - 1, ' ')\n          + peg$padEnd(\"\", hatLen, \"^\");\n    } else {\n      str += \"\\n at \" + loc;\n    }\n  }\n  return str;\n};\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function(expectation) {\n      return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n    },\n\n    class: function(expectation) {\n      var escapedParts = expectation.parts.map(function(part) {\n        return Array.isArray(part)\n          ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n          : classEscape(part);\n      });\n\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts.join(\"\") + \"]\";\n    },\n\n    any: function() {\n      return \"any character\";\n    },\n\n    end: function() {\n      return \"end of input\";\n    },\n\n    other: function(expectation) {\n      return expectation.description;\n    }\n  };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\"/g,  \"\\\\\\\"\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\\]/g, \"\\\\]\")\n      .replace(/\\^/g, \"\\\\^\")\n      .replace(/-/g,  \"\\\\-\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = expected.map(describeExpectation);\n    var i, j;\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n\n  var peg$FAILED = {};\n  var peg$source = options.grammarSource;\n\n  var peg$startRuleFunctions = { start: peg$parsestart };\n  var peg$startRuleFunction = peg$parsestart;\n\n  var peg$c0 = \".\";\n  var peg$c1 = \"-\";\n  var peg$c2 = \"+\";\n  var peg$c3 = \"0\";\n  var peg$c4 = \",\";\n  var peg$c5 = \"|\";\n  var peg$c6 = \"\\\"\";\n  var peg$c7 = \"'\";\n  var peg$c8 = \"#\";\n  var peg$c9 = \"^\";\n  var peg$c10 = \"_\";\n  var peg$c11 = \":\";\n  var peg$c12 = \"[\";\n  var peg$c13 = \"]\";\n  var peg$c14 = \"<\";\n  var peg$c15 = \">\";\n  var peg$c16 = \"@\";\n  var peg$c17 = \"!\";\n  var peg$c18 = \"(\";\n  var peg$c19 = \")\";\n  var peg$c20 = \"/\";\n  var peg$c21 = \"*\";\n  var peg$c22 = \"%\";\n  var peg$c23 = \"?\";\n  var peg$c24 = \"struct\";\n  var peg$c25 = \"target\";\n  var peg$c26 = \"euclid\";\n  var peg$c27 = \"slow\";\n  var peg$c28 = \"rotL\";\n  var peg$c29 = \"rotR\";\n  var peg$c30 = \"fast\";\n  var peg$c31 = \"scale\";\n  var peg$c32 = \"//\";\n  var peg$c33 = \"cat\";\n  var peg$c34 = \"$\";\n  var peg$c35 = \"setcps\";\n  var peg$c36 = \"setbpm\";\n  var peg$c37 = \"hush\";\n\n  var peg$r0 = /^[1-9]/;\n  var peg$r1 = /^[eE]/;\n  var peg$r2 = /^[0-9]/;\n  var peg$r3 = /^[ \\n\\r\\t]/;\n  var peg$r4 = /^[0-9a-zA-Z~]/;\n  var peg$r5 = /^[^\\n]/;\n\n  var peg$e0 = peg$otherExpectation(\"number\");\n  var peg$e1 = peg$literalExpectation(\".\", false);\n  var peg$e2 = peg$classExpectation([[\"1\", \"9\"]], false, false);\n  var peg$e3 = peg$classExpectation([\"e\", \"E\"], false, false);\n  var peg$e4 = peg$literalExpectation(\"-\", false);\n  var peg$e5 = peg$literalExpectation(\"+\", false);\n  var peg$e6 = peg$literalExpectation(\"0\", false);\n  var peg$e7 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  var peg$e8 = peg$otherExpectation(\"whitespace\");\n  var peg$e9 = peg$classExpectation([\" \", \"\\n\", \"\\r\", \"\\t\"], false, false);\n  var peg$e10 = peg$literalExpectation(\",\", false);\n  var peg$e11 = peg$literalExpectation(\"|\", false);\n  var peg$e12 = peg$literalExpectation(\"\\\"\", false);\n  var peg$e13 = peg$literalExpectation(\"'\", false);\n  var peg$e14 = peg$classExpectation([[\"0\", \"9\"], [\"a\", \"z\"], [\"A\", \"Z\"], \"~\"], false, false);\n  var peg$e15 = peg$literalExpectation(\"#\", false);\n  var peg$e16 = peg$literalExpectation(\"^\", false);\n  var peg$e17 = peg$literalExpectation(\"_\", false);\n  var peg$e18 = peg$literalExpectation(\":\", false);\n  var peg$e19 = peg$literalExpectation(\"[\", false);\n  var peg$e20 = peg$literalExpectation(\"]\", false);\n  var peg$e21 = peg$literalExpectation(\"<\", false);\n  var peg$e22 = peg$literalExpectation(\">\", false);\n  var peg$e23 = peg$literalExpectation(\"@\", false);\n  var peg$e24 = peg$literalExpectation(\"!\", false);\n  var peg$e25 = peg$literalExpectation(\"(\", false);\n  var peg$e26 = peg$literalExpectation(\")\", false);\n  var peg$e27 = peg$literalExpectation(\"/\", false);\n  var peg$e28 = peg$literalExpectation(\"*\", false);\n  var peg$e29 = peg$literalExpectation(\"%\", false);\n  var peg$e30 = peg$literalExpectation(\"?\", false);\n  var peg$e31 = peg$literalExpectation(\"struct\", false);\n  var peg$e32 = peg$literalExpectation(\"target\", false);\n  var peg$e33 = peg$literalExpectation(\"euclid\", false);\n  var peg$e34 = peg$literalExpectation(\"slow\", false);\n  var peg$e35 = peg$literalExpectation(\"rotL\", false);\n  var peg$e36 = peg$literalExpectation(\"rotR\", false);\n  var peg$e37 = peg$literalExpectation(\"fast\", false);\n  var peg$e38 = peg$literalExpectation(\"scale\", false);\n  var peg$e39 = peg$literalExpectation(\"//\", false);\n  var peg$e40 = peg$classExpectation([\"\\n\"], true, false);\n  var peg$e41 = peg$literalExpectation(\"cat\", false);\n  var peg$e42 = peg$literalExpectation(\"$\", false);\n  var peg$e43 = peg$literalExpectation(\"setcps\", false);\n  var peg$e44 = peg$literalExpectation(\"setbpm\", false);\n  var peg$e45 = peg$literalExpectation(\"hush\", false);\n\n  var peg$f0 = function() { return parseFloat(text()); };\n  var peg$f1 = function(chars) { return chars.join(\"\") };\n  var peg$f2 = function(s) { return s};\n  var peg$f3 = function(sc) { sc.arguments_.alignment = \"t\"; return sc;};\n  var peg$f4 = function(a) { return { weight: a} };\n  var peg$f5 = function(a) { return { replicate: a  } };\n  var peg$f6 = function(p, s, r) { return { operator : { type_: \"bjorklund\", arguments_ :{ pulse: p, step:s, rotation:r || 0 } } } };\n  var peg$f7 = function(a) { return { operator : { type_: \"stretch\", arguments_ :{ amount:a } } } };\n  var peg$f8 = function(a) { return { operator : { type_: \"stretch\", arguments_ :{ amount:\"1/\"+a } } } };\n  var peg$f9 = function(a) { return { operator : { type_: \"fixed-step\", arguments_ :{ amount:a } } } };\n  var peg$f10 = function(a) { return { operator : { type_: \"degradeBy\", arguments_ :{ amount:(a? a : 0.5) } } } };\n  var peg$f11 = function(s, o) { return new ElementStub(s, o);};\n  var peg$f12 = function(s) { return new PatternStub(s,\"h\"); };\n  var peg$f13 = function(tail) { return { alignment: 'v', list: tail }; };\n  var peg$f14 = function(tail) { return { alignment: 'r', list: tail }; };\n  var peg$f15 = function(head, tail) { if (tail && tail.list.length > 0) { return new PatternStub([head, ...tail.list], tail.alignment); } else { return head; } };\n  var peg$f16 = function(sc) { return sc; };\n  var peg$f17 = function(s) { return { name: \"struct\", args: { sequence:s }}};\n  var peg$f18 = function(s) { return { name: \"target\", args : { name:s}}};\n  var peg$f19 = function(p, s, r) { return { name: \"bjorklund\", args :{ pulse: parseInt(p), step:parseInt(s) }}};\n  var peg$f20 = function(a) { return { name: \"stretch\", args :{ amount: a}}};\n  var peg$f21 = function(a) { return { name: \"shift\", args :{ amount: \"-\"+a}}};\n  var peg$f22 = function(a) { return { name: \"shift\", args :{ amount: a}}};\n  var peg$f23 = function(a) { return { name: \"stretch\", args :{ amount: \"1/\"+a}}};\n  var peg$f24 = function(s) { return { name: \"scale\", args :{ scale: s.join(\"\")}}};\n  var peg$f25 = function(s, v) { return v};\n  var peg$f26 = function(s, ss) { ss.unshift(s); return new PatternStub(ss,\"t\"); };\n  var peg$f27 = function(sg) {return sg};\n  var peg$f28 = function(o, soc) { return new OperatorStub(o.name,o.args,soc)};\n  var peg$f29 = function(sc) { return sc };\n  var peg$f30 = function(c) { return c };\n  var peg$f31 = function(v) { return new CommandStub(\"setcps\", { value: v})};\n  var peg$f32 = function(v) { return new CommandStub(\"setcps\", { value: (v/120/2)})};\n  var peg$f33 = function() { return new CommandStub(\"hush\")};\n  var peg$currPos = 0;\n  var peg$savedPos = 0;\n  var peg$posDetailsCache = [{ line: 1, column: 1 }];\n  var peg$maxFailPos = 0;\n  var peg$maxFailExpected = [];\n  var peg$silentFails = 0;\n\n  var peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$savedPos;\n  }\n\n  function range() {\n    return {\n      source: peg$source,\n      start: peg$savedPos,\n      end: peg$currPos\n    };\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos];\n    var p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos);\n    var endPosDetails = peg$computePosDetails(endPos);\n\n    return {\n      source: peg$source,\n      start: {\n        offset: startPos,\n        line: startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line: endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsestart() {\n    var s0;\n\n    s0 = peg$parsestatement();\n\n    return s0;\n  }\n\n  function peg$parsenumber() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseminus();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    s2 = peg$parseint();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsefrac();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = peg$parseexp();\n      if (s4 === peg$FAILED) {\n        s4 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f0();\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e0); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsedecimal_point() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s0 = peg$c0;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e1); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsedigit1_9() {\n    var s0;\n\n    if (peg$r0.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e2); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsee() {\n    var s0;\n\n    if (peg$r1.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e3); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseexp() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parsee();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseminus();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseplus();\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = [];\n      s4 = peg$parseDIGIT();\n      if (s4 !== peg$FAILED) {\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parseDIGIT();\n        }\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s1 = [s1, s2, s3];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsefrac() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsedecimal_point();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseDIGIT();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseDIGIT();\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseint() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$parsezero();\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsedigit1_9();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseDIGIT();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseDIGIT();\n        }\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseminus() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 45) {\n      s0 = peg$c1;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e4); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseplus() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 43) {\n      s0 = peg$c2;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e5); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsezero() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 48) {\n      s0 = peg$c3;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e6); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseDIGIT() {\n    var s0;\n\n    if (peg$r2.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e7); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsews() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$r3.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e9); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$r3.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e9); }\n      }\n    }\n    peg$silentFails--;\n    s1 = peg$FAILED;\n    if (peg$silentFails === 0) { peg$fail(peg$e8); }\n\n    return s0;\n  }\n\n  function peg$parsecomma() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (input.charCodeAt(peg$currPos) === 44) {\n      s2 = peg$c4;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e10); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsews();\n      s1 = [s1, s2, s3];\n      s0 = s1;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepipe() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (input.charCodeAt(peg$currPos) === 124) {\n      s2 = peg$c5;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e11); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsews();\n      s1 = [s1, s2, s3];\n      s0 = s1;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsequote() {\n    var s0;\n\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s0 = peg$c6;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e12); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 39) {\n        s0 = peg$c7;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e13); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsestep_char() {\n    var s0;\n\n    if (peg$r4.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e14); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s0 = peg$c1;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e4); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 35) {\n          s0 = peg$c8;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e15); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s0 = peg$c0;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e1); }\n          }\n          if (s0 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 94) {\n              s0 = peg$c9;\n              peg$currPos++;\n            } else {\n              s0 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$e16); }\n            }\n            if (s0 === peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 95) {\n                s0 = peg$c10;\n                peg$currPos++;\n              } else {\n                s0 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$e17); }\n              }\n              if (s0 === peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 58) {\n                  s0 = peg$c11;\n                  peg$currPos++;\n                } else {\n                  s0 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$e18); }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsestep() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    s2 = [];\n    s3 = peg$parsestep_char();\n    if (s3 !== peg$FAILED) {\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsestep_char();\n      }\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsews();\n      peg$savedPos = s0;\n      s0 = peg$f1(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesub_cycle() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s2 = peg$c12;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e19); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsews();\n      s4 = peg$parsestack_or_choose();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsews();\n        if (input.charCodeAt(peg$currPos) === 93) {\n          s6 = peg$c13;\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e20); }\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = peg$parsews();\n          peg$savedPos = s0;\n          s0 = peg$f2(s4);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetimeline() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    if (input.charCodeAt(peg$currPos) === 60) {\n      s2 = peg$c14;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e21); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsews();\n      s4 = peg$parsesingle_cycle();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsews();\n        if (input.charCodeAt(peg$currPos) === 62) {\n          s6 = peg$c15;\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e22); }\n        }\n        if (s6 !== peg$FAILED) {\n          s7 = peg$parsews();\n          peg$savedPos = s0;\n          s0 = peg$f3(s4);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseslice() {\n    var s0;\n\n    s0 = peg$parsestep();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsesub_cycle();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsetimeline();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseslice_modifier() {\n    var s0;\n\n    s0 = peg$parseslice_weight();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseslice_bjorklund();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseslice_slow();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseslice_fast();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseslice_fixed_step();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseslice_replicate();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseslice_degrade();\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseslice_weight() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 64) {\n      s1 = peg$c16;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e23); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumber();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f4(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseslice_replicate() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 33) {\n      s1 = peg$c17;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e24); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumber();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f5(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseslice_bjorklund() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c18;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e25); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsenumber();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsews();\n        s5 = peg$parsecomma();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsews();\n          s7 = peg$parsenumber();\n          if (s7 !== peg$FAILED) {\n            s8 = peg$parsews();\n            s9 = peg$parsecomma();\n            if (s9 === peg$FAILED) {\n              s9 = null;\n            }\n            s10 = peg$parsews();\n            s11 = peg$parsenumber();\n            if (s11 === peg$FAILED) {\n              s11 = null;\n            }\n            s12 = peg$parsews();\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s13 = peg$c19;\n              peg$currPos++;\n            } else {\n              s13 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$e26); }\n            }\n            if (s13 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s0 = peg$f6(s3, s7, s11);\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseslice_slow() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 47) {\n      s1 = peg$c20;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e27); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumber();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f7(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseslice_fast() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 42) {\n      s1 = peg$c21;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e28); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumber();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f8(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseslice_fixed_step() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 37) {\n      s1 = peg$c22;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e29); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumber();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f9(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseslice_degrade() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 63) {\n      s1 = peg$c23;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e30); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumber();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f10(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseslice_with_modifier() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseslice();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseslice_modifier();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f11(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesingle_cycle() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseslice_with_modifier();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parseslice_with_modifier();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f12(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsestack_tail() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$parsecomma();\n    if (s3 !== peg$FAILED) {\n      s4 = peg$parsesingle_cycle();\n      if (s4 !== peg$FAILED) {\n        s2 = s4;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$parsecomma();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesingle_cycle();\n          if (s4 !== peg$FAILED) {\n            s2 = s4;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f13(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsechoose_tail() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$parsepipe();\n    if (s3 !== peg$FAILED) {\n      s4 = peg$parsesingle_cycle();\n      if (s4 !== peg$FAILED) {\n        s2 = s4;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$parsepipe();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsesingle_cycle();\n          if (s4 !== peg$FAILED) {\n            s2 = s4;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f14(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsestack_or_choose() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parsesingle_cycle();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsestack_tail();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parsechoose_tail();\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f15(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesequence() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    s2 = peg$parsequote();\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsestack_or_choose();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsequote();\n        if (s4 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f16(s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseoperator() {\n    var s0;\n\n    s0 = peg$parsescale();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseslow();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsefast();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsetarget();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parsebjorklund();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parsestruct();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parserotR();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parserotL();\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsestruct() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c24) {\n      s1 = peg$c24;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e31); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsesequence_or_operator();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f17(s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetarget() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c25) {\n      s1 = peg$c25;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e32); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsequote();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsestep();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsequote();\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f18(s4);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsebjorklund() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c26) {\n      s1 = peg$c26;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e33); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parseint();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsews();\n        s5 = peg$parseint();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parsews();\n          s7 = peg$parseint();\n          if (s7 === peg$FAILED) {\n            s7 = null;\n          }\n          peg$savedPos = s0;\n          s0 = peg$f19(s3, s5, s7);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseslow() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c27) {\n      s1 = peg$c27;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e34); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsenumber();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f20(s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parserotL() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c28) {\n      s1 = peg$c28;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e35); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsenumber();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f21(s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parserotR() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c29) {\n      s1 = peg$c29;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e36); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsenumber();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f22(s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsefast() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c30) {\n      s1 = peg$c30;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e37); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsenumber();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f23(s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsescale() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 5) === peg$c31) {\n      s1 = peg$c31;\n      peg$currPos += 5;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e38); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsequote();\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parsestep_char();\n        if (s5 !== peg$FAILED) {\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsestep_char();\n          }\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsequote();\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f24(s4);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecomment() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c32) {\n      s1 = peg$c32;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e39); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$r5.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e40); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$r5.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e40); }\n        }\n      }\n      s1 = [s1, s2];\n      s0 = s1;\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecat() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 3) === peg$c33) {\n      s1 = peg$c33;\n      peg$currPos += 3;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e41); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s3 = peg$c12;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e19); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsews();\n        s5 = peg$parsesequence_or_operator();\n        if (s5 !== peg$FAILED) {\n          s6 = [];\n          s7 = peg$currPos;\n          s8 = peg$parsecomma();\n          if (s8 !== peg$FAILED) {\n            s9 = peg$parsesequence_or_operator();\n            if (s9 !== peg$FAILED) {\n              peg$savedPos = s7;\n              s7 = peg$f25(s5, s9);\n            } else {\n              peg$currPos = s7;\n              s7 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s7;\n            s7 = peg$FAILED;\n          }\n          while (s7 !== peg$FAILED) {\n            s6.push(s7);\n            s7 = peg$currPos;\n            s8 = peg$parsecomma();\n            if (s8 !== peg$FAILED) {\n              s9 = peg$parsesequence_or_operator();\n              if (s9 !== peg$FAILED) {\n                peg$savedPos = s7;\n                s7 = peg$f25(s5, s9);\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s7;\n              s7 = peg$FAILED;\n            }\n          }\n          s7 = peg$parsews();\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s8 = peg$c13;\n            peg$currPos++;\n          } else {\n            s8 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e20); }\n          }\n          if (s8 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f26(s5, s6);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesequence_or_group() {\n    var s0;\n\n    s0 = peg$parsecat();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsesequence();\n    }\n\n    return s0;\n  }\n\n  function peg$parsesequence_or_operator() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parsesequence_or_group();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = [];\n      s4 = peg$parsecomment();\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$parsecomment();\n      }\n      peg$savedPos = s0;\n      s0 = peg$f27(s1);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseoperator();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsews();\n        if (input.charCodeAt(peg$currPos) === 36) {\n          s3 = peg$c34;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e42); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsews();\n          s5 = peg$parsesequence_or_operator();\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f28(s1, s5);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsesequ_or_operator_or_comment() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parsesequence_or_operator();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f29(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsecomment();\n    }\n\n    return s0;\n  }\n\n  function peg$parsesequence_definition() {\n    var s0;\n\n    s0 = peg$parsesequ_or_operator_or_comment();\n\n    return s0;\n  }\n\n  function peg$parsecommand() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsews();\n    s2 = peg$parsesetcps();\n    if (s2 === peg$FAILED) {\n      s2 = peg$parsesetbpm();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parsehush();\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsews();\n      peg$savedPos = s0;\n      s0 = peg$f30(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesetcps() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c35) {\n      s1 = peg$c35;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e43); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsenumber();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f31(s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesetbpm() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 6) === peg$c36) {\n      s1 = peg$c36;\n      peg$currPos += 6;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e44); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsews();\n      s3 = peg$parsenumber();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f32(s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsehush() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c37) {\n      s1 = peg$c37;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e45); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f33();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsestatement() {\n    var s0;\n\n    s0 = peg$parsesequence_definition();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsecommand();\n    }\n\n    return s0;\n  }\n\n\n  var PatternStub = function(source, alignment)\n  {\n    this.type_ = \"pattern\";\n    this.arguments_ = { alignment : alignment};\n    this.source_ = source;\n  }\n\n  var OperatorStub = function(name, args, source)\n  {\n    this.type_ = name;\n    this.arguments_ = args;\n    this.source_ = source;\n  }\n\n  var ElementStub = function(source, options)\n  {\n    this.type_ = \"element\";\n    this.source_ = source;\n    this.options_ = options;\n    this.location_ = location();\n  }\n\n  var CommandStub = function(name, options)\n  {\n    this.type_ = \"command\";\n    this.name_ = name;\n    this.options_ = options;\n  }\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nexport {\n  peg$SyntaxError as SyntaxError,\n\n  peg$parse as parse\n};\n","/*\nmini.mjs - <short description TODO>\nCopyright (C) 2022 Strudel contributors - see <https://github.com/tidalcycles/strudel/blob/main/packages/mini/mini.mjs>\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport * as krill from './krill-parser.js';\nimport * as strudel from '@strudel.cycles/core';\n// import { addMiniLocations } from '@strudel.cycles/eval/shapeshifter.mjs';\n\nconst { pure, Pattern, Fraction, stack, slowcat, sequence, timeCat, silence, reify } = strudel;\n\nvar _seedState = 0;\nconst randOffset = 0.0002;\n\nfunction _nextSeed() {\n  return _seedState++;\n}\n\nconst applyOptions = (parent) => (pat, i) => {\n  const ast = parent.source_[i];\n  const options = ast.options_;\n  const operator = options?.operator;\n  if (operator) {\n    switch (operator.type_) {\n      case 'stretch': {\n        const speed = Fraction(operator.arguments_.amount).inverse();\n        return reify(pat).fast(speed);\n      }\n      case 'bjorklund':\n        return pat.euclid(operator.arguments_.pulse, operator.arguments_.step, operator.arguments_.rotation);\n      case 'degradeBy':\n        return reify(pat)._degradeByWith(\n          strudel.rand.early(randOffset * _nextSeed()).segment(1),\n          operator.arguments_.amount,\n        );\n      // TODO: case 'fixed-step': \"%\"\n    }\n    console.warn(`operator \"${operator.type_}\" not implemented`);\n  }\n  if (options?.weight) {\n    // weight is handled by parent\n    return pat;\n  }\n  // TODO: bjorklund e.g. \"c3(5,8)\"\n  const unimplemented = Object.keys(options || {}).filter((key) => key !== 'operator');\n  if (unimplemented.length) {\n    console.warn(\n      `option${unimplemented.length > 1 ? 's' : ''} ${unimplemented.map((o) => `\"${o}\"`).join(', ')} not implemented`,\n    );\n  }\n  return pat;\n};\n\nfunction resolveReplications(ast) {\n  // the general idea here: x!3 = [x*3]@3\n  // could this be made easier?!\n  ast.source_ = ast.source_.map((child) => {\n    const { replicate, ...options } = child.options_ || {};\n    if (replicate) {\n      return {\n        ...child,\n        options_: { ...options, weight: replicate },\n        source_: {\n          type_: 'pattern',\n          arguments_: {\n            alignment: 'h',\n          },\n          source_: [\n            {\n              type_: 'element',\n              source_: child.source_,\n              location_: child.location_,\n              options_: {\n                operator: {\n                  type_: 'stretch',\n                  arguments_: { amount: Fraction(replicate).inverse().toString() },\n                },\n              },\n            },\n          ],\n        },\n      };\n    }\n    return child;\n  });\n}\n\nexport function patternifyAST(ast) {\n  switch (ast.type_) {\n    case 'pattern': {\n      resolveReplications(ast);\n      const children = ast.source_.map(patternifyAST).map(applyOptions(ast));\n      const alignment = ast.arguments_.alignment;\n      if (alignment === 'v') {\n        return stack(...children);\n      }\n      if (alignment === 'r') {\n        return strudel.chooseInWith(strudel.rand.early(randOffset * _nextSeed()).segment(1), children);\n      }\n      const weightedChildren = ast.source_.some((child) => !!child.options_?.weight);\n      if (!weightedChildren && alignment === 't') {\n        return slowcat(...children);\n      }\n      if (weightedChildren) {\n        const pat = timeCat(...ast.source_.map((child, i) => [child.options_?.weight || 1, children[i]]));\n        if (alignment === 't') {\n          const weightSum = ast.source_.reduce((sum, child) => sum + (child.options_?.weight || 1), 0);\n          return pat._slow(weightSum); // timecat + slow\n        }\n        return pat;\n      }\n      return sequence(...children);\n    }\n    case 'element': {\n      if (ast.source_ === '~') {\n        return silence;\n      }\n      if (typeof ast.source_ !== 'object') {\n        /* if (!addMiniLocations) {\n          return ast.source_;\n        } */\n        if (!ast.location_) {\n          console.warn('no location for', ast);\n          return ast.source_;\n        }\n        const { start, end } = ast.location_;\n        const value = !isNaN(Number(ast.source_)) ? Number(ast.source_) : ast.source_;\n        // the following line expects the shapeshifter append .withMiniLocation\n        // because location_ is only relative to the mini string, but we need it relative to whole code\n        return pure(value).withLocation([start.line, start.column, start.offset], [end.line, end.column, end.offset]);\n      }\n      return patternifyAST(ast.source_);\n    }\n    case 'stretch':\n      return patternifyAST(ast.source_).slow(ast.arguments_.amount);\n    /* case 'scale':\n      let [tonic, scale] = Scale.tokenize(ast.arguments_.scale);\n      const intervals = Scale.get(scale).intervals;\n      const pattern = patternifyAST(ast.source_);\n      tonic = tonic || 'C4';\n      // console.log('scale', ast, pattern, tonic, scale);\n      console.log('tonic', tonic);\n      return pattern.fmap((step: any) => {\n        step = Number(step);\n        if (isNaN(step)) {\n          console.warn(`scale step \"${step}\" not a number`);\n          return step;\n        }\n        const octaves = Math.floor(step / intervals.length);\n        const mod = (n: number, m: number): number => (n < 0 ? mod(n + m, m) : n % m);\n        const index = mod(step, intervals.length); // % with negative numbers. e.g. -1 % 3 = 2\n        const interval = Interval.add(intervals[index], Interval.fromSemitones(octaves * 12));\n        return Note.transpose(tonic, interval || '1P');\n      }); */\n    /* case 'struct':\n      // TODO:\n      return silence; */\n    default:\n      console.warn(`node type \"${ast.type_}\" not implemented -> returning silence`);\n      return silence;\n  }\n}\n\n// mini notation only (wraps in \"\")\nexport const mini = (...strings) => {\n  const pats = strings.map((str) => {\n    const ast = krill.parse(`\"${str}\"`);\n    return patternifyAST(ast);\n  });\n  return sequence(...pats);\n};\n\n// includes haskell style (raw krill parsing)\nexport const h = (string) => {\n  const ast = krill.parse(string);\n  // console.log('ast', ast);\n  return patternifyAST(ast);\n};\n\n// shorthand for mini\nPattern.prototype.define('mini', mini, { composable: true });\nPattern.prototype.define('m', mini, { composable: true });\nPattern.prototype.define('h', h, { composable: true });\n\nexport function minify(thing) {\n  if (typeof thing === 'string') {\n    return mini(thing);\n  }\n  return reify(thing);\n}\n"],"names":["peg$subclass","child","parent","C","peg$SyntaxError","message","expected","found","location","self","peg$padEnd","str","targetLength","padString","sources","src","k","s","loc","e","filler","line","last","hatLen","DESCRIBE_EXPECTATION_FNS","expectation","literalEscape","escapedParts","part","classEscape","hex","ch","describeExpectation","describeExpected","descriptions","i","j","describeFound","peg$parse","input","options","peg$FAILED","peg$source","peg$startRuleFunctions","peg$parsestart","peg$startRuleFunction","peg$c0","peg$c1","peg$c2","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$r0","peg$r1","peg$r2","peg$r3","peg$r4","peg$r5","peg$e0","peg$otherExpectation","peg$e1","peg$literalExpectation","peg$e2","peg$classExpectation","peg$e3","peg$e4","peg$e5","peg$e6","peg$e7","peg$e8","peg$e9","peg$e10","peg$e11","peg$e12","peg$e13","peg$e14","peg$e15","peg$e16","peg$e17","peg$e18","peg$e19","peg$e20","peg$e21","peg$e22","peg$e23","peg$e24","peg$e25","peg$e26","peg$e27","peg$e28","peg$e29","peg$e30","peg$e31","peg$e32","peg$e33","peg$e34","peg$e35","peg$e36","peg$e37","peg$e38","peg$e39","peg$e40","peg$e41","peg$e42","peg$e43","peg$e44","peg$e45","peg$f0","text","peg$f1","chars","peg$f2","peg$f3","sc","peg$f4","a","peg$f5","peg$f6","p","r","peg$f7","peg$f8","peg$f9","peg$f10","peg$f11","o","ElementStub","peg$f12","PatternStub","peg$f13","tail","peg$f14","peg$f15","head","peg$f16","peg$f17","peg$f18","peg$f19","peg$f20","peg$f21","peg$f22","peg$f23","peg$f24","peg$f25","v","peg$f26","ss","peg$f27","sg","peg$f28","soc","OperatorStub","peg$f29","peg$f30","c","peg$f31","CommandStub","peg$f32","peg$f33","peg$currPos","peg$savedPos","peg$posDetailsCache","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","peg$result","peg$computeLocation","ignoreCase","parts","inverted","peg$endExpectation","description","peg$computePosDetails","pos","details","startPos","endPos","startPosDetails","endPosDetails","peg$fail","peg$buildStructuredError","s0","peg$parsestatement","peg$parsenumber","s2","peg$parseminus","peg$parseint","peg$parsefrac","peg$parseexp","peg$parsedecimal_point","peg$parsedigit1_9","peg$parsee","s1","s3","s4","peg$parseplus","peg$parseDIGIT","peg$parsezero","peg$parsews","peg$parsecomma","peg$parsepipe","peg$parsequote","peg$parsestep_char","peg$parsestep","peg$parsesub_cycle","s6","peg$parsestack_or_choose","peg$parsetimeline","peg$parsesingle_cycle","peg$parseslice","peg$parseslice_modifier","peg$parseslice_weight","peg$parseslice_bjorklund","peg$parseslice_slow","peg$parseslice_fast","peg$parseslice_fixed_step","peg$parseslice_replicate","peg$parseslice_degrade","s5","s7","s11","s13","peg$parseslice_with_modifier","peg$parsestack_tail","peg$parsechoose_tail","peg$parsesequence","peg$parseoperator","peg$parsescale","peg$parseslow","peg$parsefast","peg$parsetarget","peg$parsebjorklund","peg$parsestruct","peg$parserotR","peg$parserotL","peg$parsesequence_or_operator","peg$parsecomment","peg$parsecat","s8","s9","peg$parsesequence_or_group","peg$parsesequ_or_operator_or_comment","peg$parsesequence_definition","peg$parsecommand","peg$parsesetcps","peg$parsesetbpm","peg$parsehush","source","alignment","name","args","pure","Pattern","Fraction","stack","slowcat","sequence","timeCat","silence","reify","strudel","_seedState","randOffset","_nextSeed","applyOptions","pat","operator","speed","strudel.rand","unimplemented","key","resolveReplications","ast","replicate","patternifyAST","children","strudel.chooseInWith","weightedChildren","_a","weightSum","sum","start","end","value","mini","strings","pats","krill.parse","h","string","minify","thing"],"mappings":"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"}